{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\acer\\\\Desktop\\\\MERN_Todolist\\\\forntend\\\\src\\\\components\\\\Todos.jsx\",\n  _s = $RefreshSig$();\n// import { useEffect } from 'react';\n\n// import { deleteTodo, getAllTodos } from '../redux/actions/index';\n// import { ALL_TODOS, DONE_TODOS, ACTIVE_TODOS } from '../redux/actions/type';\n\n// import { useDispatch, useSelector } from 'react-redux';\n\n// // component\n// import Todo from './Todo';\n// import Tabs from './Tabs';\n\n// export const Todos = () => {\n\n//     const dispatch = useDispatch();\n\n//     const todos = useSelector(state => state.todos);\n//     const currentTab = useSelector(state => state.currentTab);\n\n//     useEffect(() => {\n//         dispatch(getAllTodos());\n//     }, [])\n\n//     const getTodos = () => {\n//         if (currentTab === ALL_TODOS) {\n//             return todos;\n//         } else if (currentTab === ACTIVE_TODOS) {\n//             return todos.filter(todo => !todo.done)\n//         } else if (currentTab === DONE_TODOS) {\n//             return todos.filter(todo => todo.done)\n//         }\n//     }\n\n//     const removeDoneTodos = () => {\n//         todos.forEach(({ done, _id }) => {\n//             if (done) {\n//                 dispatch(deleteTodo(_id));\n//             }\n//         })\n//     }\n\n//     return (\n//         <article>\n//             <div>\n//                 <Tabs currentTab={currentTab} />\n\n//                 {\n//                     todos.some(todo => todo.done) ? (\n//                         <button\n//                             onClick={removeDoneTodos}\n//                             className=\"button clear\"\n//                         >Remove Done Todos</button>\n//                     ) : null    \n//                 }\n//             </div>\n\n//             <ul>\n//                 {\n//                     getTodos().map(todo => (\n//                         <Todo \n//                             key={todo._id}\n//                             todo={todo}\n//                         />\n//                     ))\n//                 }\n//             </ul>\n//         </article>\n//     )\n// }\n\n//export default Todos;\n// import React, { useEffect } from 'react';\n// import { useDispatch, useSelector } from 'react-redux';\n// import { getAllTodos, deleteTodo } from '../redux/actions';\n// import Todo from './Todo';\n// import Tabs from './Tabs';\n\n// const Todos = () => {\n//   const dispatch = useDispatch();\n//   const todos = useSelector((state) => state.todos);\n//   const currentTab = useSelector((state) => state.currentTab);\n\n//   useEffect(() => {\n//     dispatch(getAllTodos());\n//   }, [dispatch]);\n\n//   const getTodos = () => {\n//     if (currentTab === 'All Todos') {\n//       return todos;\n//     } else if (currentTab === 'Active Todos') {\n//       return todos.filter((todo) => !todo.done);\n//     } else if (currentTab === 'Done Todos') {\n//       return todos.filter((todo) => todo.done);\n//     }\n//     return []; // Return an empty array if no condition matches to avoid 'map' error.\n//   };\n\n//   const removeDoneTodos = () => {\n//     todos.forEach(({ done, _id }) => {\n//       if (done) {\n//         dispatch(deleteTodo(_id));\n//       }\n//     });\n//   };\n\n//   return (\n//     <article>\n//       <div>\n//         <Tabs currentTab={currentTab} />\n\n//         {todos.some((todo) => todo.done) ? (\n//           <button onClick={removeDoneTodos} className=\"button clear\">\n//             Remove Done Todos\n//           </button>\n//         ) : null}\n//       </div>\n\n//       <ul>\n//         {getTodos().map((todo) => (\n//           <Todo key={todo._id} todo={todo} />\n//         ))}\n//       </ul>\n//     </article>\n//   );\n// };\n\n// export default Todos;\n// import React , { useEffect }from 'react';\n// import { useDispatch, useSelector } from 'react-redux';\n// import { getAllTodos, deleteTodo } from '../redux/actions/index';\n// import Todo from './Todo';\n// import Tabs from './Tabs';\n// import TodoForm from './TodoForm'; // Import the TodoForm component\n\n// const Todos = () => {\n//   const dispatch = useDispatch();\n//   const todos = useSelector((state) => state.todos);\n//   const currentTab = useSelector((state) => state.currentTab);\n\n//   useEffect(() => {\n//     dispatch(getAllTodos());\n//   }, [dispatch]);\n\n//   const getTodos = () => {\n//     if (currentTab === 'All Todos') {\n//       return todos;\n//     } else if (currentTab === 'Active Todos') {\n//       return todos.filter((todo) => !todo.done);\n//     } else if (currentTab === 'Done Todos') {\n//       return todos.filter((todo) => todo.done);\n//     }\n//   };\n\n//   const removeDoneTodos = () => {\n//     todos.forEach(({ done, _id }) => {\n//       if (done) {\n//         dispatch(deleteTodo(_id));\n//       }\n//     });\n//   };\n\n//   return (\n//     <article>\n//       <div>\n//         <TodoForm /> {/* Include the TodoForm component here */}\n//         <Tabs currentTab={currentTab} />\n\n//         {todos.some((todo) => todo.done) ? (\n//           <button onClick={removeDoneTodos} className=\"button clear\">\n//             Remove Done Todos\n//           </button>\n//         ) : null}\n//       </div>\n\n//       <ul>\n//         {getTodos().map((todo) => (\n//           <Todo key={todo._id} todo={todo} />\n//         ))}\n//       </ul>\n//     </article>\n//   );\n// };\n\n// export default Todos;\n// import React, { useEffect } from 'react';\n// import { useDispatch, useSelector } from 'react-redux';\n// import { getAllTodos, deleteTodo } from '../redux/actions';\n// import Todo from './Todo';\n// import Tabs from './Tabs';\n// import TodoForm from './TodoForm';\n// import Header from './Header';\n\n// const Todos = () => {\n//   const dispatch = useDispatch();\n//   const todos = useSelector((state) => state.todos);\n//   const currentTab = useSelector((state) => state.currentTab);\n\n//   useEffect(() => {\n//     dispatch(getAllTodos());\n//   }, [dispatch]);\n\n//   const getTodos = () => {\n//     if (!todos) return []; // Handle the case when todos is undefined\n//     if (currentTab === 'All Todos') {\n//         console.log(currentTab);\n//       return todos;\n//     } else if (currentTab === 'Active Todos') {\n//       return todos.filter((todo) => !todo.done);\n//     } else if (currentTab === 'Done Todos') {\n//       return todos.filter((todo) => todo.done);\n//     } else {\n//       return []; // Handle the case when the currentTab is not recognized\n//     }\n\n//   };\n\n//   const removeDoneTodos = () => {\n//     if (!todos) return; // Ensure todos is not undefined\n//     todos.forEach(({ done, _id }) => {\n//       if (done) {\n//         dispatch(deleteTodo(_id));\n//       }\n//     });\n//   };\n\n//   return (\n//     <article>\n//       <div>\n//         <Header/>\n//         <TodoForm/>\n\n//         <Tabs currentTab={currentTab} />\n\n//         {todos && todos.some((todo) => todo.done) ? (\n//           <button onClick={removeDoneTodos} className=\"button clear\">\n//             Remove Done Todos\n//           </button>\n//         ) : null}\n\n//       </div>\n\n//       <ul>\n\n//         {getTodos().map((todo) => (\n//           <Todo key={todo._id} todo={todo} />\n//         ))}\n\n//       </ul>\n//     </article>\n//   );\n// };\n\n// export default Todos;\nimport React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { fetchTodos, setFilter } from '../redux/actions/index';\nimport Todo from './Todo';\nimport TodoForm from './TodoForm';\nimport Header from './Header';\nimport '../App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Todos = () => {\n  _s();\n  const dispatch = useDispatch();\n  const todos = useSelector(state => state.todos); // Assuming your todos reducer stores the Todo items\n  const completedTodos = useSelector(state => state.completedTodos);\n  const deletedTodos = useSelector(state => state.deletedTodos);\n  const filter = useSelector(state => state.filter);\n  useEffect(() => {\n    // Fetch the Todo items when the component mounts\n    dispatch(fetchTodos());\n  }, [dispatch]);\n  const handleFilter = filter => {\n    dispatch(setFilter(filter));\n  };\n  const getFilteredTodos = () => {\n    switch (filter) {\n      case 'active':\n        return todos.filter(todo => !todo.done);\n      case 'done':\n        return todos.filter(todo => todo.done);\n      default:\n        return todos;\n    }\n    ;\n    if (!Array.isArray(todos)) {\n      // Render the LoadingMessage component instead of the loading message\n      return console.log('hello world');\n    }\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(TodoForm, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleFilter('all'),\n          children: \"All Todos\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleFilter('active'),\n          children: \"Active Todos\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleFilter('done'),\n          children: \"Done Todos\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Todo List\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 7\n        }, this), todos.map(todo => /*#__PURE__*/_jsxDEV(Todo, {\n          todo: todo\n        }, todo.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 9\n        }, this)), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: getFilteredTodos().map(todo => /*#__PURE__*/_jsxDEV(Todo, {\n            todo: todo\n          }, todo.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 313,\n            columnNumber: 11\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 6\n      }, this)]\n    }, void 0, true);\n  };\n};\n_s(Todos, \"iAfMYlEvD4e5xu3S/K31lgqokdc=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector, useSelector];\n});\n_c = Todos;\nexport default Todos;\nvar _c;\n$RefreshReg$(_c, \"Todos\");","map":{"version":3,"names":["React","useEffect","useSelector","useDispatch","fetchTodos","setFilter","Todo","TodoForm","Header","jsxDEV","_jsxDEV","Fragment","_Fragment","Todos","_s","dispatch","todos","state","completedTodos","deletedTodos","filter","handleFilter","getFilteredTodos","todo","done","Array","isArray","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","id","_c","$RefreshReg$"],"sources":["C:/Users/acer/Desktop/MERN_Todolist/forntend/src/components/Todos.jsx"],"sourcesContent":["// import { useEffect } from 'react';\r\n\r\n// import { deleteTodo, getAllTodos } from '../redux/actions/index';\r\n// import { ALL_TODOS, DONE_TODOS, ACTIVE_TODOS } from '../redux/actions/type';\r\n\r\n// import { useDispatch, useSelector } from 'react-redux';\r\n\r\n\r\n// // component\r\n// import Todo from './Todo';\r\n// import Tabs from './Tabs';\r\n\r\n\r\n// export const Todos = () => {\r\n\r\n//     const dispatch = useDispatch();\r\n\r\n//     const todos = useSelector(state => state.todos);\r\n//     const currentTab = useSelector(state => state.currentTab);\r\n\r\n//     useEffect(() => {\r\n//         dispatch(getAllTodos());\r\n//     }, [])\r\n\r\n//     const getTodos = () => {\r\n//         if (currentTab === ALL_TODOS) {\r\n//             return todos;\r\n//         } else if (currentTab === ACTIVE_TODOS) {\r\n//             return todos.filter(todo => !todo.done)\r\n//         } else if (currentTab === DONE_TODOS) {\r\n//             return todos.filter(todo => todo.done)\r\n//         }\r\n//     }\r\n\r\n//     const removeDoneTodos = () => {\r\n//         todos.forEach(({ done, _id }) => {\r\n//             if (done) {\r\n//                 dispatch(deleteTodo(_id));\r\n//             }\r\n//         })\r\n//     }\r\n\r\n//     return (\r\n//         <article>\r\n//             <div>\r\n//                 <Tabs currentTab={currentTab} />\r\n\r\n//                 {\r\n//                     todos.some(todo => todo.done) ? (\r\n//                         <button\r\n//                             onClick={removeDoneTodos}\r\n//                             className=\"button clear\"\r\n//                         >Remove Done Todos</button>\r\n//                     ) : null    \r\n//                 }\r\n//             </div>\r\n\r\n//             <ul>\r\n//                 {\r\n//                     getTodos().map(todo => (\r\n//                         <Todo \r\n//                             key={todo._id}\r\n//                             todo={todo}\r\n//                         />\r\n//                     ))\r\n//                 }\r\n//             </ul>\r\n//         </article>\r\n//     )\r\n// }\r\n\r\n//export default Todos;\r\n// import React, { useEffect } from 'react';\r\n// import { useDispatch, useSelector } from 'react-redux';\r\n// import { getAllTodos, deleteTodo } from '../redux/actions';\r\n// import Todo from './Todo';\r\n// import Tabs from './Tabs';\r\n\r\n// const Todos = () => {\r\n//   const dispatch = useDispatch();\r\n//   const todos = useSelector((state) => state.todos);\r\n//   const currentTab = useSelector((state) => state.currentTab);\r\n\r\n//   useEffect(() => {\r\n//     dispatch(getAllTodos());\r\n//   }, [dispatch]);\r\n\r\n//   const getTodos = () => {\r\n//     if (currentTab === 'All Todos') {\r\n//       return todos;\r\n//     } else if (currentTab === 'Active Todos') {\r\n//       return todos.filter((todo) => !todo.done);\r\n//     } else if (currentTab === 'Done Todos') {\r\n//       return todos.filter((todo) => todo.done);\r\n//     }\r\n//     return []; // Return an empty array if no condition matches to avoid 'map' error.\r\n//   };\r\n\r\n//   const removeDoneTodos = () => {\r\n//     todos.forEach(({ done, _id }) => {\r\n//       if (done) {\r\n//         dispatch(deleteTodo(_id));\r\n//       }\r\n//     });\r\n//   };\r\n\r\n//   return (\r\n//     <article>\r\n//       <div>\r\n//         <Tabs currentTab={currentTab} />\r\n\r\n//         {todos.some((todo) => todo.done) ? (\r\n//           <button onClick={removeDoneTodos} className=\"button clear\">\r\n//             Remove Done Todos\r\n//           </button>\r\n//         ) : null}\r\n//       </div>\r\n\r\n//       <ul>\r\n//         {getTodos().map((todo) => (\r\n//           <Todo key={todo._id} todo={todo} />\r\n//         ))}\r\n//       </ul>\r\n//     </article>\r\n//   );\r\n// };\r\n\r\n// export default Todos;\r\n// import React , { useEffect }from 'react';\r\n// import { useDispatch, useSelector } from 'react-redux';\r\n// import { getAllTodos, deleteTodo } from '../redux/actions/index';\r\n// import Todo from './Todo';\r\n// import Tabs from './Tabs';\r\n// import TodoForm from './TodoForm'; // Import the TodoForm component\r\n\r\n// const Todos = () => {\r\n//   const dispatch = useDispatch();\r\n//   const todos = useSelector((state) => state.todos);\r\n//   const currentTab = useSelector((state) => state.currentTab);\r\n\r\n//   useEffect(() => {\r\n//     dispatch(getAllTodos());\r\n//   }, [dispatch]);\r\n\r\n//   const getTodos = () => {\r\n//     if (currentTab === 'All Todos') {\r\n//       return todos;\r\n//     } else if (currentTab === 'Active Todos') {\r\n//       return todos.filter((todo) => !todo.done);\r\n//     } else if (currentTab === 'Done Todos') {\r\n//       return todos.filter((todo) => todo.done);\r\n//     }\r\n//   };\r\n\r\n//   const removeDoneTodos = () => {\r\n//     todos.forEach(({ done, _id }) => {\r\n//       if (done) {\r\n//         dispatch(deleteTodo(_id));\r\n//       }\r\n//     });\r\n//   };\r\n\r\n//   return (\r\n//     <article>\r\n//       <div>\r\n//         <TodoForm /> {/* Include the TodoForm component here */}\r\n//         <Tabs currentTab={currentTab} />\r\n\r\n//         {todos.some((todo) => todo.done) ? (\r\n//           <button onClick={removeDoneTodos} className=\"button clear\">\r\n//             Remove Done Todos\r\n//           </button>\r\n//         ) : null}\r\n//       </div>\r\n\r\n//       <ul>\r\n//         {getTodos().map((todo) => (\r\n//           <Todo key={todo._id} todo={todo} />\r\n//         ))}\r\n//       </ul>\r\n//     </article>\r\n//   );\r\n// };\r\n\r\n// export default Todos;\r\n// import React, { useEffect } from 'react';\r\n// import { useDispatch, useSelector } from 'react-redux';\r\n// import { getAllTodos, deleteTodo } from '../redux/actions';\r\n// import Todo from './Todo';\r\n// import Tabs from './Tabs';\r\n// import TodoForm from './TodoForm';\r\n// import Header from './Header';\r\n\r\n\r\n// const Todos = () => {\r\n//   const dispatch = useDispatch();\r\n//   const todos = useSelector((state) => state.todos);\r\n//   const currentTab = useSelector((state) => state.currentTab);\r\n \r\n//   useEffect(() => {\r\n//     dispatch(getAllTodos());\r\n//   }, [dispatch]);\r\n\r\n//   const getTodos = () => {\r\n//     if (!todos) return []; // Handle the case when todos is undefined\r\n//     if (currentTab === 'All Todos') {\r\n//         console.log(currentTab);\r\n//       return todos;\r\n//     } else if (currentTab === 'Active Todos') {\r\n//       return todos.filter((todo) => !todo.done);\r\n//     } else if (currentTab === 'Done Todos') {\r\n//       return todos.filter((todo) => todo.done);\r\n//     } else {\r\n//       return []; // Handle the case when the currentTab is not recognized\r\n//     }\r\n  \r\n//   };\r\n\r\n//   const removeDoneTodos = () => {\r\n//     if (!todos) return; // Ensure todos is not undefined\r\n//     todos.forEach(({ done, _id }) => {\r\n//       if (done) {\r\n//         dispatch(deleteTodo(_id));\r\n//       }\r\n//     });\r\n//   };\r\n\r\n//   return (\r\n//     <article>\r\n//       <div>\r\n//         <Header/>\r\n//         <TodoForm/>\r\n       \r\n//         <Tabs currentTab={currentTab} />\r\n\r\n//         {todos && todos.some((todo) => todo.done) ? (\r\n//           <button onClick={removeDoneTodos} className=\"button clear\">\r\n//             Remove Done Todos\r\n//           </button>\r\n//         ) : null}\r\n        \r\n//       </div>\r\n\r\n//       <ul>\r\n        \r\n//         {getTodos().map((todo) => (\r\n//           <Todo key={todo._id} todo={todo} />\r\n//         ))}\r\n       \r\n//       </ul>\r\n//     </article>\r\n//   );\r\n// };\r\n\r\n// export default Todos;\r\nimport React, { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { fetchTodos, setFilter } from '../redux/actions/index';\r\nimport Todo from './Todo';\r\nimport TodoForm from './TodoForm';\r\nimport Header from './Header';\r\nimport '../App.css';\r\n\r\n\r\nconst Todos = () => {\r\n  const dispatch = useDispatch();\r\n  const todos = useSelector((state) => state.todos); // Assuming your todos reducer stores the Todo items\r\n  const completedTodos = useSelector((state) => state.completedTodos);\r\n  const deletedTodos = useSelector((state) => state.deletedTodos);\r\n  const filter = useSelector((state) => state.filter);\r\n  useEffect(() => {\r\n    // Fetch the Todo items when the component mounts\r\n    dispatch(fetchTodos());\r\n    \r\n  \r\n  }, [dispatch]);\r\n\r\n  const handleFilter = (filter) => {\r\n    dispatch(setFilter(filter));\r\n  };\r\n  const getFilteredTodos = () => {\r\n    switch (filter) {\r\n      case 'active':\r\n        return todos.filter((todo) => !todo.done);\r\n      case 'done':\r\n        return todos.filter((todo) => todo.done);\r\n      default:\r\n        return todos;\r\n    };\r\n  if (!Array.isArray(todos)) {\r\n    // Render the LoadingMessage component instead of the loading message\r\n    return (console.log('hello world'))\r\n   \r\n  }\r\n\r\n  return (\r\n    <>\r\n     <Header/>\r\n     <TodoForm/>\r\n     <div>\r\n        <button onClick={() => handleFilter('all')}>All Todos</button>\r\n        <button onClick={() => handleFilter('active')}>Active Todos</button>\r\n        <button onClick={() => handleFilter('done')}>Done Todos</button>\r\n      </div>\r\n    \r\n     <div>\r\n      <h1>Todo List</h1>\r\n      {todos.map((todo) => (\r\n        <Todo key={todo.id} todo={todo} />\r\n      ))}\r\n        <ul>\r\n        {getFilteredTodos().map((todo) => (\r\n          <Todo key={todo.id} todo={todo} />\r\n        ))}\r\n      </ul>\r\n    </div>\r\n    </>\r\n\r\n    \r\n   \r\n  \r\n  );\r\n}}\r\n\r\n\r\nexport default Todos;\r\n\r\n"],"mappings":";;AAAA;;AAEA;AACA;;AAEA;;AAGA;AACA;AACA;;AAGA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,UAAU,EAAEC,SAAS,QAA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"},"metadata":{},"sourceType":"module","externalDependencies":[]}