{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\acer\\\\Desktop\\\\MERN_Todolist\\\\forntend\\\\src\\\\components\\\\LoginForm.jsx\",\n  _s = $RefreshSig$();\n// // src/components/LoginForm.jsx\n// import React, { useState } from 'react';\n// import { useDispatch } from 'react-redux';\n// import { login } from '../redux/actions/authActions';\n// import { useNavigate } from 'react-router-dom';\n\n// const LoginForm = () => {\n//   const [email, setEmail] = useState('');\n//   const [password, setPassword] = useState('');\n\n//   const dispatch = useDispatch();\n//   const navigate = useNavigate();\n\n//   const handleLogin = async (e) => {\n//     e.preventDefault();\n//     const success = await dispatch(login(email, password));\n//     if (success) {\n//       navigate('/todos'); // Redirect to TodoList on successful login\n//     }\n//   };\n\n//   return (\n//     <div>\n//       <form onSubmit={handleLogin}>\n//         <input\n//           type=\"email\"\n//           value={email}\n//           onChange={(e) => setEmail(e.target.value)}\n//           placeholder=\"Email\"\n//         />\n//         <input\n//           type=\"password\"\n//           value={password}\n//           onChange={(e) => setPassword(e.target.value)}\n//           placeholder=\"Password\"\n//         />\n//         <button type=\"submit\">Login</button>\n//       </form>\n//     </div>\n//   );\n// };\n\n// export default LoginForm;\n\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useNavigate } from 'react-router-dom'; // Import useNavigate\nimport { loginAction } from '../redux/actions/authActions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst LoginForm = () => {\n  _s();\n  const dispatch = useDispatch();\n  const isAuthenticated = useSelector(state => !!state.auth.token);\n  const navigate = useNavigate(); // Get the navigate function from useNavigate\n\n  // Your login logic here\n  const handleLogin = async (email, password) => {\n    // Your login logic here\n    const loginSuccessful = await dispatch(loginAction(email, password));\n    // If login is successful, the user will be redirected to the todo page\n    // (assuming the loginAction returns true on success)\n    // You can also use other conditions to determine whether to redirect or not\n    if (loginSuccessful) {\n      // Redirect to the todo page using navigate function\n      navigate('/todo');\n    }\n  };\n\n  // Render login form UI\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: isAuthenticated ?\n    // If already authenticated, redirect to the todo page\n    navigate('/todo') :\n    /*#__PURE__*/\n    // Render your login form UI here\n    // You need to add your login form JSX here, for example:\n    _jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleLogin\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n_s(LoginForm, \"2ba5gbkxBxiGZSIB5bm16Tk2Y8U=\", false, function () {\n  return [useDispatch, useSelector, useNavigate];\n});\n_c = LoginForm;\nexport default LoginForm;\nvar _c;\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"names":["React","useDispatch","useSelector","useNavigate","loginAction","jsxDEV","_jsxDEV","Fragment","_Fragment","LoginForm","_s","dispatch","isAuthenticated","state","auth","token","navigate","handleLogin","email","password","loginSuccessful","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/acer/Desktop/MERN_Todolist/forntend/src/components/LoginForm.jsx"],"sourcesContent":["// // src/components/LoginForm.jsx\r\n// import React, { useState } from 'react';\r\n// import { useDispatch } from 'react-redux';\r\n// import { login } from '../redux/actions/authActions';\r\n// import { useNavigate } from 'react-router-dom';\r\n\r\n// const LoginForm = () => {\r\n//   const [email, setEmail] = useState('');\r\n//   const [password, setPassword] = useState('');\r\n\r\n//   const dispatch = useDispatch();\r\n//   const navigate = useNavigate();\r\n\r\n//   const handleLogin = async (e) => {\r\n//     e.preventDefault();\r\n//     const success = await dispatch(login(email, password));\r\n//     if (success) {\r\n//       navigate('/todos'); // Redirect to TodoList on successful login\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div>\r\n//       <form onSubmit={handleLogin}>\r\n//         <input\r\n//           type=\"email\"\r\n//           value={email}\r\n//           onChange={(e) => setEmail(e.target.value)}\r\n//           placeholder=\"Email\"\r\n//         />\r\n//         <input\r\n//           type=\"password\"\r\n//           value={password}\r\n//           onChange={(e) => setPassword(e.target.value)}\r\n//           placeholder=\"Password\"\r\n//         />\r\n//         <button type=\"submit\">Login</button>\r\n//       </form>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default LoginForm;\r\n\r\nimport React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useNavigate } from 'react-router-dom'; // Import useNavigate\r\nimport { loginAction } from '../redux/actions/authActions';\r\n\r\nconst LoginForm = () => {\r\n  const dispatch = useDispatch();\r\n  const isAuthenticated = useSelector((state) => !!state.auth.token);\r\n  const navigate = useNavigate(); // Get the navigate function from useNavigate\r\n\r\n  // Your login logic here\r\n  const handleLogin = async (email, password) => {\r\n    // Your login logic here\r\n    const loginSuccessful = await dispatch(loginAction(email, password));\r\n    // If login is successful, the user will be redirected to the todo page\r\n    // (assuming the loginAction returns true on success)\r\n    // You can also use other conditions to determine whether to redirect or not\r\n    if (loginSuccessful) {\r\n      // Redirect to the todo page using navigate function\r\n      navigate('/todo');\r\n    }\r\n  };\r\n\r\n  // Render login form UI\r\n  return (\r\n    <>\r\n      {isAuthenticated ? (\r\n        // If already authenticated, redirect to the todo page\r\n        navigate('/todo')\r\n      ) : (\r\n        // Render your login form UI here\r\n        // You need to add your login form JSX here, for example:\r\n        <div>\r\n          <form onSubmit={handleLogin}>\r\n            {/* Your form inputs and submit button */}\r\n          </form>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LoginForm;\r\n\r\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,WAAW,QAAQ,kBAAkB,CAAC,CAAC;AAChD,SAASC,WAAW,QAAQ,8BAA8B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE3D,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAMC,QAAQ,GAAGV,WAAW,CAAC,CAAC;EAC9B,MAAMW,eAAe,GAAGV,WAAW,CAAEW,KAAK,IAAK,CAAC,CAACA,KAAK,CAACC,IAAI,CAACC,KAAK,CAAC;EAClE,MAAMC,QAAQ,GAAGb,WAAW,CAAC,CAAC,CAAC,CAAC;;EAEhC;EACA,MAAMc,WAAW,GAAG,MAAAA,CAAOC,KAAK,EAAEC,QAAQ,KAAK;IAC7C;IACA,MAAMC,eAAe,GAAG,MAAMT,QAAQ,CAACP,WAAW,CAACc,KAAK,EAAEC,QAAQ,CAAC,CAAC;IACpE;IACA;IACA;IACA,IAAIC,eAAe,EAAE;MACnB;MACAJ,QAAQ,CAAC,OAAO,CAAC;IACnB;EACF,CAAC;;EAED;EACA,oBACEV,OAAA,CAAAE,SAAA;IAAAa,QAAA,EACGT,eAAe;IACd;IACAI,QAAQ,CAAC,OAAO,CAAC;IAAA;IAEjB;IACA;IACAV,OAAA;MAAAe,QAAA,eACEf,OAAA;QAAMgB,QAAQ,EAAEL;MAAY;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEtB;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ;EACN,gBACD,CAAC;AAEP,CAAC;AAAChB,EAAA,CAnCID,SAAS;EAAA,QACIR,WAAW,EACJC,WAAW,EAClBC,WAAW;AAAA;AAAAwB,EAAA,GAHxBlB,SAAS;AAqCf,eAAeA,SAAS;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}