{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\acer\\\\Desktop\\\\MERN_Todolist\\\\forntend\\\\src\\\\components\\\\TodoForm.jsx\",\n  _s = $RefreshSig$();\n// import { useState } from \"react\";\n\n// import { useDispatch } from \"react-redux\";\n\n// import { addNewTodo } from \"../redux/actions\";\n\n// const TodoForm = () => {\n//     const [text, setText] = useState(\"\");\n\n//     const dispatch = useDispatch();\n\n//     const onFormSubmit = (e) => {\n//         e.preventDefault();\n\n//         dispatch(addNewTodo(text));\n\n//         setText('');\n//     }\n\n//     const onInputChange = (e) => {\n//         setText(e.target.value);\n//     }\n\n//     return (\n//         <form className=\"form\" onSubmit={onFormSubmit}>\n//             <input  \n//                 placeholder=\"Enter new todo...\"\n//                 className=\"input\"\n//                 onChange={onInputChange}\n//                 value={text}\n//             />\n//         </form>\n//     );\n// };\n\n// export default TodoForm;\n// TodoForm.js\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TodoForm = ({\n  onAddNewTodo\n}) => {\n  _s();\n  const [text, setText] = useState('');\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (text.trim() !== '') {\n      // Call the onAddNewTodo function with the new todo data\n      onAddNewTodo({\n        data: text,\n        done: false,\n        createdAt: new Date().toISOString(),\n        _id: Math.random().toString(36).substr(2, 9) // Generate a random ID for the new todo\n      });\n\n      setText(''); // Clear the input field after adding the new todo\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: text,\n      onChange: e => setText(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Add Todo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n_s(TodoForm, \"M8VhbSOru85VOsk7T2j5DvKRp+M=\");\n_c = TodoForm;\nexport default TodoForm;\nvar _c;\n$RefreshReg$(_c, \"TodoForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","TodoForm","onAddNewTodo","_s","text","setText","handleSubmit","e","preventDefault","trim","data","done","createdAt","Date","toISOString","_id","Math","random","toString","substr","onSubmit","children","type","value","onChange","target","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/acer/Desktop/MERN_Todolist/forntend/src/components/TodoForm.jsx"],"sourcesContent":["// import { useState } from \"react\";\r\n\r\n// import { useDispatch } from \"react-redux\";\r\n\r\n// import { addNewTodo } from \"../redux/actions\";\r\n\r\n\r\n// const TodoForm = () => {\r\n//     const [text, setText] = useState(\"\");\r\n\r\n//     const dispatch = useDispatch();\r\n\r\n//     const onFormSubmit = (e) => {\r\n//         e.preventDefault();\r\n\r\n//         dispatch(addNewTodo(text));\r\n\r\n//         setText('');\r\n//     }\r\n\r\n//     const onInputChange = (e) => {\r\n//         setText(e.target.value);\r\n//     }\r\n\r\n//     return (\r\n//         <form className=\"form\" onSubmit={onFormSubmit}>\r\n//             <input  \r\n//                 placeholder=\"Enter new todo...\"\r\n//                 className=\"input\"\r\n//                 onChange={onInputChange}\r\n//                 value={text}\r\n//             />\r\n//         </form>\r\n//     );\r\n// };\r\n\r\n// export default TodoForm;\r\n// TodoForm.js\r\nimport React, { useState } from 'react';\r\n\r\nconst TodoForm = ({ onAddNewTodo }) => {\r\n  const [text, setText] = useState('');\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (text.trim() !== '') {\r\n      // Call the onAddNewTodo function with the new todo data\r\n      onAddNewTodo({\r\n        data: text,\r\n        done: false,\r\n        createdAt: new Date().toISOString(),\r\n        _id: Math.random().toString(36).substr(2, 9), // Generate a random ID for the new todo\r\n      });\r\n\r\n      setText(''); // Clear the input field after adding the new todo\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <input type=\"text\" value={text} onChange={(e) => setText(e.target.value)} />\r\n      <button type=\"submit\">Add Todo</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default TodoForm;\r\n"],"mappings":";;AAAA;;AAEA;;AAEA;;AAGA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,QAAQ,GAAGA,CAAC;EAAEC;AAAa,CAAC,KAAK;EAAAC,EAAA;EACrC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAEpC,MAAMQ,YAAY,GAAIC,CAAC,IAAK;IAC1BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAIJ,IAAI,CAACK,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;MACtB;MACAP,YAAY,CAAC;QACXQ,IAAI,EAAEN,IAAI;QACVO,IAAI,EAAE,KAAK;QACXC,SAAS,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC;QACnCC,GAAG,EAAEC,IAAI,CAACC,MAAM,CAAC,CAAC,CAACC,QAAQ,CAAC,EAAE,CAAC,CAACC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAE;MAChD,CAAC,CAAC;;MAEFd,OAAO,CAAC,EAAE,CAAC,CAAC,CAAC;IACf;EACF,CAAC;;EAED,oBACEL,OAAA;IAAMoB,QAAQ,EAAEd,YAAa;IAAAe,QAAA,gBAC3BrB,OAAA;MAAOsB,IAAI,EAAC,MAAM;MAACC,KAAK,EAAEnB,IAAK;MAACoB,QAAQ,EAAGjB,CAAC,IAAKF,OAAO,CAACE,CAAC,CAACkB,MAAM,CAACF,KAAK;IAAE;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC5E7B,OAAA;MAAQsB,IAAI,EAAC,QAAQ;MAAAD,QAAA,EAAC;IAAQ;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACnC,CAAC;AAEX,CAAC;AAAC1B,EAAA,CAxBIF,QAAQ;AAAA6B,EAAA,GAAR7B,QAAQ;AA0Bd,eAAeA,QAAQ;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}