{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\acer\\\\Desktop\\\\MERN_Todolist\\\\forntend\\\\src\\\\components\\\\Todos.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect } from 'react';\nimport { deleteTodo, getAllTodos } from '../redux/actions/index';\nimport { ALL_TODOS, DONE_TODOS, ACTIVE_TODOS } from '../redux/actions/type';\nimport { useDispatch, useSelector } from 'react-redux';\n\n// component\nimport Todo from './Todo';\nimport Tabs from './Tabs';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Todos = () => {\n  _s();\n  const dispatch = useDispatch();\n  const todos = useSelector(state => state.todos);\n  const currentTab = useSelector(state => state.currentTab);\n  useEffect(() => {\n    dispatch(getAllTodos());\n  }, []);\n  const getTodos = () => {\n    if (currentTab === ALL_TODOS) {\n      return todos;\n    } else if (currentTab === ACTIVE_TODOS) {\n      return todos.filter(todo => !todo.done);\n    } else if (currentTab === DONE_TODOS) {\n      return todos.filter(todo => todo.done);\n    }\n  };\n  const removeDoneTodos = () => {\n    todos.forEach(({\n      done,\n      _id\n    }) => {\n      if (done) {\n        dispatch(deleteTodo(_id));\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"article\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Tabs, {\n        currentTab: currentTab\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), todos.some(todo => todo.done) ? /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: removeDoneTodos,\n        className: \"button clear\",\n        children: \"Remove Done Todos\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 25\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: getTodos().map(todo => /*#__PURE__*/_jsxDEV(Todo, {\n        todo: todo\n      }, todo._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n};\n_s(Todos, \"NTT9ffX9tf+K99yogg77aoZF784=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n_c = Todos;\nexport default Todos;\n// import React, { useEffect } from 'react';\n// import { useDispatch, useSelector } from 'react-redux';\n// import { getAllTodos, deleteTodo } from '../redux/actions';\n// import Todo from './Todo';\n// import Tabs from './Tabs';\n\n// const Todos = () => {\n//   const dispatch = useDispatch();\n//   const todos = useSelector((state) => state.todos);\n//   const currentTab = useSelector((state) => state.currentTab);\n\n//   useEffect(() => {\n//     dispatch(getAllTodos());\n//   }, [dispatch]);\n\n//   const getTodos = () => {\n//     if (currentTab === 'All Todos') {\n//       return todos;\n//     } else if (currentTab === 'Active Todos') {\n//       return todos.filter((todo) => !todo.done);\n//     } else if (currentTab === 'Done Todos') {\n//       return todos.filter((todo) => todo.done);\n//     }\n//     return []; // Return an empty array if no condition matches to avoid 'map' error.\n//   };\n\n//   const removeDoneTodos = () => {\n//     todos.forEach(({ done, _id }) => {\n//       if (done) {\n//         dispatch(deleteTodo(_id));\n//       }\n//     });\n//   };\n\n//   return (\n//     <article>\n//       <div>\n//         <Tabs currentTab={currentTab} />\n\n//         {todos.some((todo) => todo.done) ? (\n//           <button onClick={removeDoneTodos} className=\"button clear\">\n//             Remove Done Todos\n//           </button>\n//         ) : null}\n//       </div>\n\n//       <ul>\n//         {getTodos().map((todo) => (\n//           <Todo key={todo._id} todo={todo} />\n//         ))}\n//       </ul>\n//     </article>\n//   );\n// };\n\n// export default Todos;\n// import React , { useEffect }from 'react';\n// import { useDispatch, useSelector } from 'react-redux';\n// import { getAllTodos, deleteTodo } from '../redux/actions/index';\n// import Todo from './Todo';\n// import Tabs from './Tabs';\n// import TodoForm from './TodoForm'; // Import the TodoForm component\n\n// const Todos = () => {\n//   const dispatch = useDispatch();\n//   const todos = useSelector((state) => state.todos);\n//   const currentTab = useSelector((state) => state.currentTab);\n\n//   useEffect(() => {\n//     dispatch(getAllTodos());\n//   }, [dispatch]);\n\n//   const getTodos = () => {\n//     if (currentTab === 'All Todos') {\n//       return todos;\n//     } else if (currentTab === 'Active Todos') {\n//       return todos.filter((todo) => !todo.done);\n//     } else if (currentTab === 'Done Todos') {\n//       return todos.filter((todo) => todo.done);\n//     }\n//   };\n\n//   const removeDoneTodos = () => {\n//     todos.forEach(({ done, _id }) => {\n//       if (done) {\n//         dispatch(deleteTodo(_id));\n//       }\n//     });\n//   };\n\n//   return (\n//     <article>\n//       <div>\n//         <TodoForm /> {/* Include the TodoForm component here */}\n//         <Tabs currentTab={currentTab} />\n\n//         {todos.some((todo) => todo.done) ? (\n//           <button onClick={removeDoneTodos} className=\"button clear\">\n//             Remove Done Todos\n//           </button>\n//         ) : null}\n//       </div>\n\n//       <ul>\n//         {getTodos().map((todo) => (\n//           <Todo key={todo._id} todo={todo} />\n//         ))}\n//       </ul>\n//     </article>\n//   );\n// };\n\n// export default Todos;\n// import React, { useEffect } from 'react';\n// import { useDispatch, useSelector } from 'react-redux';\n// import { getAllTodos, deleteTodo } from '../redux/actions';\n// import Todo from './Todo';\n// import Tabs from './Tabs';\n// import TodoForm from './TodoForm';\n// import Header from './Header';\n\n// const Todos = () => {\n//   const dispatch = useDispatch();\n//   const todos = useSelector((state) => state.todos);\n//   const currentTab = useSelector((state) => state.currentTab);\n\n//   useEffect(() => {\n//     dispatch(getAllTodos());\n//   }, [dispatch]);\n\n//   const getTodos = () => {\n//     if (!todos) return []; // Handle the case when todos is undefined\n//     if (currentTab === 'All Todos') {\n//         console.log(currentTab);\n//       return todos;\n//     } else if (currentTab === 'Active Todos') {\n//       return todos.filter((todo) => !todo.done);\n//     } else if (currentTab === 'Done Todos') {\n//       return todos.filter((todo) => todo.done);\n//     } else {\n//       return []; // Handle the case when the currentTab is not recognized\n//     }\n\n//   };\n\n//   const removeDoneTodos = () => {\n//     if (!todos) return; // Ensure todos is not undefined\n//     todos.forEach(({ done, _id }) => {\n//       if (done) {\n//         dispatch(deleteTodo(_id));\n//       }\n//     });\n//   };\n\n//   return (\n//     <article>\n//       <div>\n//         <Header/>\n//         <TodoForm/>\n\n//         <Tabs currentTab={currentTab} />\n\n//         {todos && todos.some((todo) => todo.done) ? (\n//           <button onClick={removeDoneTodos} className=\"button clear\">\n//             Remove Done Todos\n//           </button>\n//         ) : null}\n\n//       </div>\n\n//       <ul>\n\n//         {getTodos().map((todo) => (\n//           <Todo key={todo._id} todo={todo} />\n//         ))}\n\n//       </ul>\n//     </article>\n//   );\n// };\n\n// export default Todos;\nvar _c;\n$RefreshReg$(_c, \"Todos\");","map":{"version":3,"names":["useEffect","deleteTodo","getAllTodos","ALL_TODOS","DONE_TODOS","ACTIVE_TODOS","useDispatch","useSelector","Todo","Tabs","jsxDEV","_jsxDEV","Todos","_s","dispatch","todos","state","currentTab","getTodos","filter","todo","done","removeDoneTodos","forEach","_id","children","fileName","_jsxFileName","lineNumber","columnNumber","some","onClick","className","map","_c","$RefreshReg$"],"sources":["C:/Users/acer/Desktop/MERN_Todolist/forntend/src/components/Todos.jsx"],"sourcesContent":["import { useEffect } from 'react';\r\n\r\nimport { deleteTodo, getAllTodos } from '../redux/actions/index';\r\nimport { ALL_TODOS, DONE_TODOS, ACTIVE_TODOS } from '../redux/actions/type';\r\n\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\n\r\n// component\r\nimport Todo from './Todo';\r\nimport Tabs from './Tabs';\r\n\r\n\r\nexport const Todos = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const todos = useSelector(state => state.todos);\r\n    const currentTab = useSelector(state => state.currentTab);\r\n\r\n    useEffect(() => {\r\n        dispatch(getAllTodos());\r\n    }, [])\r\n\r\n    const getTodos = () => {\r\n        if (currentTab === ALL_TODOS) {\r\n            return todos;\r\n        } else if (currentTab === ACTIVE_TODOS) {\r\n            return todos.filter(todo => !todo.done)\r\n        } else if (currentTab === DONE_TODOS) {\r\n            return todos.filter(todo => todo.done)\r\n        }\r\n    }\r\n\r\n    const removeDoneTodos = () => {\r\n        todos.forEach(({ done, _id }) => {\r\n            if (done) {\r\n                dispatch(deleteTodo(_id));\r\n            }\r\n        })\r\n    }\r\n\r\n    return (\r\n        <article>\r\n            <div>\r\n                <Tabs currentTab={currentTab} />\r\n\r\n                {\r\n                    todos.some(todo => todo.done) ? (\r\n                        <button\r\n                            onClick={removeDoneTodos}\r\n                            className=\"button clear\"\r\n                        >Remove Done Todos</button>\r\n                    ) : null    \r\n                }\r\n            </div>\r\n\r\n            <ul>\r\n                {\r\n                    getTodos().map(todo => (\r\n                        <Todo \r\n                            key={todo._id}\r\n                            todo={todo}\r\n                        />\r\n                    ))\r\n                }\r\n            </ul>\r\n        </article>\r\n    )\r\n}\r\n\r\nexport default Todos;\r\n// import React, { useEffect } from 'react';\r\n// import { useDispatch, useSelector } from 'react-redux';\r\n// import { getAllTodos, deleteTodo } from '../redux/actions';\r\n// import Todo from './Todo';\r\n// import Tabs from './Tabs';\r\n\r\n// const Todos = () => {\r\n//   const dispatch = useDispatch();\r\n//   const todos = useSelector((state) => state.todos);\r\n//   const currentTab = useSelector((state) => state.currentTab);\r\n\r\n//   useEffect(() => {\r\n//     dispatch(getAllTodos());\r\n//   }, [dispatch]);\r\n\r\n//   const getTodos = () => {\r\n//     if (currentTab === 'All Todos') {\r\n//       return todos;\r\n//     } else if (currentTab === 'Active Todos') {\r\n//       return todos.filter((todo) => !todo.done);\r\n//     } else if (currentTab === 'Done Todos') {\r\n//       return todos.filter((todo) => todo.done);\r\n//     }\r\n//     return []; // Return an empty array if no condition matches to avoid 'map' error.\r\n//   };\r\n\r\n//   const removeDoneTodos = () => {\r\n//     todos.forEach(({ done, _id }) => {\r\n//       if (done) {\r\n//         dispatch(deleteTodo(_id));\r\n//       }\r\n//     });\r\n//   };\r\n\r\n//   return (\r\n//     <article>\r\n//       <div>\r\n//         <Tabs currentTab={currentTab} />\r\n\r\n//         {todos.some((todo) => todo.done) ? (\r\n//           <button onClick={removeDoneTodos} className=\"button clear\">\r\n//             Remove Done Todos\r\n//           </button>\r\n//         ) : null}\r\n//       </div>\r\n\r\n//       <ul>\r\n//         {getTodos().map((todo) => (\r\n//           <Todo key={todo._id} todo={todo} />\r\n//         ))}\r\n//       </ul>\r\n//     </article>\r\n//   );\r\n// };\r\n\r\n// export default Todos;\r\n// import React , { useEffect }from 'react';\r\n// import { useDispatch, useSelector } from 'react-redux';\r\n// import { getAllTodos, deleteTodo } from '../redux/actions/index';\r\n// import Todo from './Todo';\r\n// import Tabs from './Tabs';\r\n// import TodoForm from './TodoForm'; // Import the TodoForm component\r\n\r\n// const Todos = () => {\r\n//   const dispatch = useDispatch();\r\n//   const todos = useSelector((state) => state.todos);\r\n//   const currentTab = useSelector((state) => state.currentTab);\r\n\r\n//   useEffect(() => {\r\n//     dispatch(getAllTodos());\r\n//   }, [dispatch]);\r\n\r\n//   const getTodos = () => {\r\n//     if (currentTab === 'All Todos') {\r\n//       return todos;\r\n//     } else if (currentTab === 'Active Todos') {\r\n//       return todos.filter((todo) => !todo.done);\r\n//     } else if (currentTab === 'Done Todos') {\r\n//       return todos.filter((todo) => todo.done);\r\n//     }\r\n//   };\r\n\r\n//   const removeDoneTodos = () => {\r\n//     todos.forEach(({ done, _id }) => {\r\n//       if (done) {\r\n//         dispatch(deleteTodo(_id));\r\n//       }\r\n//     });\r\n//   };\r\n\r\n//   return (\r\n//     <article>\r\n//       <div>\r\n//         <TodoForm /> {/* Include the TodoForm component here */}\r\n//         <Tabs currentTab={currentTab} />\r\n\r\n//         {todos.some((todo) => todo.done) ? (\r\n//           <button onClick={removeDoneTodos} className=\"button clear\">\r\n//             Remove Done Todos\r\n//           </button>\r\n//         ) : null}\r\n//       </div>\r\n\r\n//       <ul>\r\n//         {getTodos().map((todo) => (\r\n//           <Todo key={todo._id} todo={todo} />\r\n//         ))}\r\n//       </ul>\r\n//     </article>\r\n//   );\r\n// };\r\n\r\n// export default Todos;\r\n// import React, { useEffect } from 'react';\r\n// import { useDispatch, useSelector } from 'react-redux';\r\n// import { getAllTodos, deleteTodo } from '../redux/actions';\r\n// import Todo from './Todo';\r\n// import Tabs from './Tabs';\r\n// import TodoForm from './TodoForm';\r\n// import Header from './Header';\r\n\r\n\r\n// const Todos = () => {\r\n//   const dispatch = useDispatch();\r\n//   const todos = useSelector((state) => state.todos);\r\n//   const currentTab = useSelector((state) => state.currentTab);\r\n \r\n//   useEffect(() => {\r\n//     dispatch(getAllTodos());\r\n//   }, [dispatch]);\r\n\r\n//   const getTodos = () => {\r\n//     if (!todos) return []; // Handle the case when todos is undefined\r\n//     if (currentTab === 'All Todos') {\r\n//         console.log(currentTab);\r\n//       return todos;\r\n//     } else if (currentTab === 'Active Todos') {\r\n//       return todos.filter((todo) => !todo.done);\r\n//     } else if (currentTab === 'Done Todos') {\r\n//       return todos.filter((todo) => todo.done);\r\n//     } else {\r\n//       return []; // Handle the case when the currentTab is not recognized\r\n//     }\r\n  \r\n//   };\r\n\r\n//   const removeDoneTodos = () => {\r\n//     if (!todos) return; // Ensure todos is not undefined\r\n//     todos.forEach(({ done, _id }) => {\r\n//       if (done) {\r\n//         dispatch(deleteTodo(_id));\r\n//       }\r\n//     });\r\n//   };\r\n\r\n//   return (\r\n//     <article>\r\n//       <div>\r\n//         <Header/>\r\n//         <TodoForm/>\r\n       \r\n//         <Tabs currentTab={currentTab} />\r\n\r\n//         {todos && todos.some((todo) => todo.done) ? (\r\n//           <button onClick={removeDoneTodos} className=\"button clear\">\r\n//             Remove Done Todos\r\n//           </button>\r\n//         ) : null}\r\n        \r\n//       </div>\r\n\r\n//       <ul>\r\n        \r\n//         {getTodos().map((todo) => (\r\n//           <Todo key={todo._id} todo={todo} />\r\n//         ))}\r\n       \r\n//       </ul>\r\n//     </article>\r\n//   );\r\n// };\r\n\r\n// export default Todos;\r\n"],"mappings":";;AAAA,SAASA,SAAS,QAAQ,OAAO;AAEjC,SAASC,UAAU,EAAEC,WAAW,QAAQ,wBAAwB;AAChE,SAASC,SAAS,EAAEC,UAAU,EAAEC,YAAY,QAAQ,uBAAuB;AAE3E,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;;AAGtD;AACA,OAAOC,IAAI,MAAM,QAAQ;AACzB,OAAOC,IAAI,MAAM,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG1B,OAAO,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAEvB,MAAMC,QAAQ,GAAGR,WAAW,CAAC,CAAC;EAE9B,MAAMS,KAAK,GAAGR,WAAW,CAACS,KAAK,IAAIA,KAAK,CAACD,KAAK,CAAC;EAC/C,MAAME,UAAU,GAAGV,WAAW,CAACS,KAAK,IAAIA,KAAK,CAACC,UAAU,CAAC;EAEzDjB,SAAS,CAAC,MAAM;IACZc,QAAQ,CAACZ,WAAW,CAAC,CAAC,CAAC;EAC3B,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMgB,QAAQ,GAAGA,CAAA,KAAM;IACnB,IAAID,UAAU,KAAKd,SAAS,EAAE;MAC1B,OAAOY,KAAK;IAChB,CAAC,MAAM,IAAIE,UAAU,KAAKZ,YAAY,EAAE;MACpC,OAAOU,KAAK,CAACI,MAAM,CAACC,IAAI,IAAI,CAACA,IAAI,CAACC,IAAI,CAAC;IAC3C,CAAC,MAAM,IAAIJ,UAAU,KAAKb,UAAU,EAAE;MAClC,OAAOW,KAAK,CAACI,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACC,IAAI,CAAC;IAC1C;EACJ,CAAC;EAED,MAAMC,eAAe,GAAGA,CAAA,KAAM;IAC1BP,KAAK,CAACQ,OAAO,CAAC,CAAC;MAAEF,IAAI;MAAEG;IAAI,CAAC,KAAK;MAC7B,IAAIH,IAAI,EAAE;QACNP,QAAQ,CAACb,UAAU,CAACuB,GAAG,CAAC,CAAC;MAC7B;IACJ,CAAC,CAAC;EACN,CAAC;EAED,oBACIb,OAAA;IAAAc,QAAA,gBACId,OAAA;MAAAc,QAAA,gBACId,OAAA,CAACF,IAAI;QAACQ,UAAU,EAAEA;MAAW;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,EAG5Bd,KAAK,CAACe,IAAI,CAACV,IAAI,IAAIA,IAAI,CAACC,IAAI,CAAC,gBACzBV,OAAA;QACIoB,OAAO,EAAET,eAAgB;QACzBU,SAAS,EAAC,cAAc;QAAAP,QAAA,EAC3B;MAAiB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,GAC3B,IAAI;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEX,CAAC,eAENlB,OAAA;MAAAc,QAAA,EAEQP,QAAQ,CAAC,CAAC,CAACe,GAAG,CAACb,IAAI,iBACfT,OAAA,CAACH,IAAI;QAEDY,IAAI,EAAEA;MAAK,GADNA,IAAI,CAACI,GAAG;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEhB,CACJ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEN,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAElB,CAAC;AAAAhB,EAAA,CAxDYD,KAAK;EAAA,QAEGN,WAAW,EAEdC,WAAW,EACNA,WAAW;AAAA;AAAA2B,EAAA,GALrBtB,KAAK;AA0DlB,eAAeA,KAAK;AACpsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}