{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\acer\\\\Desktop\\\\MERN_Todolist\\\\forntend\\\\src\\\\components\\\\LoginForm.jsx\",\n  _s = $RefreshSig$();\n// // src/components/LoginForm.jsx\n// import React, { useState } from 'react';\n// import { useDispatch } from 'react-redux';\n// import { login } from '../redux/actions/authActions';\n// import { useNavigate } from 'react-router-dom';\n\n// const LoginForm = () => {\n//   const [email, setEmail] = useState('');\n//   const [password, setPassword] = useState('');\n\n//   const dispatch = useDispatch();\n//   const navigate = useNavigate();\n\n//   const handleLogin = async (e) => {\n//     e.preventDefault();\n//     const success = await dispatch(login(email, password));\n//     if (success) {\n//       navigate('/todos'); // Redirect to TodoList on successful login\n//     }\n//   };\n\n//   return (\n//     <div>\n//       <form onSubmit={handleLogin}>\n//         <input\n//           type=\"email\"\n//           value={email}\n//           onChange={(e) => setEmail(e.target.value)}\n//           placeholder=\"Email\"\n//         />\n//         <input\n//           type=\"password\"\n//           value={password}\n//           onChange={(e) => setPassword(e.target.value)}\n//           placeholder=\"Password\"\n//         />\n//         <button type=\"submit\">Login</button>\n//       </form>\n//     </div>\n//   );\n// };\n\n// export default LoginForm;\n\n// import React from 'react';\n// import { useDispatch, useSelector } from 'react-redux';\n// import { useNavigate } from 'react-router-dom'; // Import useNavigate\n// import { loginAction } from '../redux/actions/authActions';\n\n// const LoginForm = () => {\n//   const dispatch = useDispatch();\n//   const isAuthenticated = useSelector((state) => !!state.auth.token);\n//   const navigate = useNavigate(); // Get the navigate function from useNavigate\n\n//   // Your login logic here\n//   const handleLogin = async (email, password) => {\n//     // Your login logic here\n//     const loginSuccessful = await dispatch(loginAction(email, password));\n//     // If login is successful, the user will be redirected to the todo page\n//     // (assuming the loginAction returns true on success)\n//     // You can also use other conditions to determine whether to redirect or not\n//     if (loginSuccessful) {\n//       // Redirect to the todo page using navigate function\n//       navigate('/todo');\n//     }\n//   };\n\n//   // Render login form UI\n//   return (\n//     <>\n//       {isAuthenticated ? (\n//         // If already authenticated, redirect to the todo page\n//         navigate('/todo')\n//       ) : (\n//         // Render your login form UI here\n//         // You need to add your login form JSX here, for example:\n//         <div>\n//           <form onSubmit={handleLogin}>\n//             {/* Your form inputs and submit button */}\n//           </form>\n//         </div>\n//       )}\n//     </>\n//   );\n// };\n\n// export default LoginForm;\n// src/components/LoginForm.jsx\nimport React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { login } from '../redux/actions/authActions';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginForm = () => {\n  _s();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const isAuthenticated = useSelector(state => !!state.auth.token);\n  const handleLogin = async e => {\n    e.preventDefault();\n    console.log('Logging in with:', email, password);\n    const success = await dispatch(login(email, password));\n    if (success) {\n      console.log('Login successful');\n      navigate('/todos'); // Redirect to TodoList on successful login\n    } else {\n      console.log('Login failed');\n      // Handle login failure (e.g., show an error message)\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleLogin,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        value: email,\n        onChange: e => setEmail(e.target.value),\n        placeholder: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        value: password,\n        onChange: e => setPassword(e.target.value),\n        placeholder: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 117,\n    columnNumber: 5\n  }, this);\n};\n_s(LoginForm, \"ryzN404WC0pFkHQ0iFMyBp8HCtI=\", false, function () {\n  return [useDispatch, useNavigate, useSelector];\n});\n_c = LoginForm;\nexport default LoginForm;\nvar _c;\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"names":["React","useState","useDispatch","useSelector","login","useNavigate","jsxDEV","_jsxDEV","LoginForm","_s","email","setEmail","password","setPassword","dispatch","navigate","isAuthenticated","state","auth","token","handleLogin","e","preventDefault","console","log","success","children","onSubmit","type","value","onChange","target","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/acer/Desktop/MERN_Todolist/forntend/src/components/LoginForm.jsx"],"sourcesContent":["// // src/components/LoginForm.jsx\r\n// import React, { useState } from 'react';\r\n// import { useDispatch } from 'react-redux';\r\n// import { login } from '../redux/actions/authActions';\r\n// import { useNavigate } from 'react-router-dom';\r\n\r\n// const LoginForm = () => {\r\n//   const [email, setEmail] = useState('');\r\n//   const [password, setPassword] = useState('');\r\n\r\n//   const dispatch = useDispatch();\r\n//   const navigate = useNavigate();\r\n\r\n//   const handleLogin = async (e) => {\r\n//     e.preventDefault();\r\n//     const success = await dispatch(login(email, password));\r\n//     if (success) {\r\n//       navigate('/todos'); // Redirect to TodoList on successful login\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div>\r\n//       <form onSubmit={handleLogin}>\r\n//         <input\r\n//           type=\"email\"\r\n//           value={email}\r\n//           onChange={(e) => setEmail(e.target.value)}\r\n//           placeholder=\"Email\"\r\n//         />\r\n//         <input\r\n//           type=\"password\"\r\n//           value={password}\r\n//           onChange={(e) => setPassword(e.target.value)}\r\n//           placeholder=\"Password\"\r\n//         />\r\n//         <button type=\"submit\">Login</button>\r\n//       </form>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default LoginForm;\r\n\r\n// import React from 'react';\r\n// import { useDispatch, useSelector } from 'react-redux';\r\n// import { useNavigate } from 'react-router-dom'; // Import useNavigate\r\n// import { loginAction } from '../redux/actions/authActions';\r\n\r\n// const LoginForm = () => {\r\n//   const dispatch = useDispatch();\r\n//   const isAuthenticated = useSelector((state) => !!state.auth.token);\r\n//   const navigate = useNavigate(); // Get the navigate function from useNavigate\r\n\r\n//   // Your login logic here\r\n//   const handleLogin = async (email, password) => {\r\n//     // Your login logic here\r\n//     const loginSuccessful = await dispatch(loginAction(email, password));\r\n//     // If login is successful, the user will be redirected to the todo page\r\n//     // (assuming the loginAction returns true on success)\r\n//     // You can also use other conditions to determine whether to redirect or not\r\n//     if (loginSuccessful) {\r\n//       // Redirect to the todo page using navigate function\r\n//       navigate('/todo');\r\n//     }\r\n//   };\r\n\r\n//   // Render login form UI\r\n//   return (\r\n//     <>\r\n//       {isAuthenticated ? (\r\n//         // If already authenticated, redirect to the todo page\r\n//         navigate('/todo')\r\n//       ) : (\r\n//         // Render your login form UI here\r\n//         // You need to add your login form JSX here, for example:\r\n//         <div>\r\n//           <form onSubmit={handleLogin}>\r\n//             {/* Your form inputs and submit button */}\r\n//           </form>\r\n//         </div>\r\n//       )}\r\n//     </>\r\n//   );\r\n// };\r\n\r\n// export default LoginForm;\r\n// src/components/LoginForm.jsx\r\nimport React, { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { login } from '../redux/actions/authActions';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst LoginForm = () => {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n  const isAuthenticated = useSelector((state) => !!state.auth.token);\r\n\r\n  const handleLogin = async (e) => {\r\n    e.preventDefault();\r\n    console.log('Logging in with:', email, password);\r\n\r\n    const success = await dispatch(login(email, password));\r\n    if (success) {\r\n      console.log('Login successful');\r\n      navigate('/todos'); // Redirect to TodoList on successful login\r\n    } else {\r\n      console.log('Login failed');\r\n      // Handle login failure (e.g., show an error message)\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <form onSubmit={handleLogin}>\r\n        <input\r\n          type=\"email\"\r\n          value={email}\r\n          onChange={(e) => setEmail(e.target.value)}\r\n          placeholder=\"Email\"\r\n        />\r\n        <input\r\n          type=\"password\"\r\n          value={password}\r\n          onChange={(e) => setPassword(e.target.value)}\r\n          placeholder=\"Password\"\r\n        />\r\n        <button type=\"submit\">Login</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginForm;\r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}