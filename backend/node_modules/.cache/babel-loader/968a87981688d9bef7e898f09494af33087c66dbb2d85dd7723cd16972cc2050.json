{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\acer\\\\Desktop\\\\MERN_Todolist\\\\forntend\\\\src\\\\components\\\\LoginForm.jsx\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react';\n// import { useDispatch } from 'react-redux';\n// import { login } from '../redux/actions/authActions';\n// import { useNavigate } from 'react-router-dom';\n\n// const LoginForm = () => {\n//   const [email, setEmail] = useState('');\n//   const [password, setPassword] = useState('');\n\n//   const dispatch = useDispatch();\n//   const navigate = useNavigate();\n\n//   const handleLogin = async (e) => {\n//     e.preventDefault();\n//     console.log('Logging in with:', email, password);\n\n//     const success = await dispatch(login(email, password));\n//     if (success) {\n//       console.log('Login successful');\n//       navigate('/todos'); // Redirect to TodoList on successful login\n//     } else {\n//       console.log('Login failed');\n//       // Handle login failure (e.g., show an error message)\n//     }\n//   };\n\n//   return (\n//     <div>\n//       <form onSubmit={handleLogin}>\n//         <input\n//           type=\"email\"\n//           value={email}\n//           onChange={(e) => setEmail(e.target.value)}\n//           placeholder=\"Email\"\n//         />\n//         <input\n//           type=\"password\"\n//           value={password}\n//           onChange={(e) => setPassword(e.target.value)}\n//           placeholder=\"Password\"\n//         />\n//         <button type=\"submit\">Login</button>\n//       </form>\n//     </div>\n//   );\n// };\n\n// export default LoginForm;\n\nimport React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { login } from '../redux/actions/authActions';\nimport { useNavigate, Link } from 'react-router-dom';\nimport '../App.css'; // Import the CSS file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginForm = () => {\n  _s();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const handleLogin = async e => {\n    e.preventDefault();\n    console.log('Logging in with:', email, password);\n    const success = await dispatch(login(email, password));\n    if (success) {\n      console.log('Login successful');\n      navigate('/todos'); // Redirect to TodoList on successful login\n    } else {\n      console.log('Login failed');\n      // Handle login failure (e.g., show an error message)\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"login-form\",\n      onSubmit: handleLogin,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        value: email,\n        onChange: e => setEmail(e.target.value),\n        placeholder: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        value: password,\n        onChange: e => setPassword(e.target.value),\n        placeholder: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"register-link\",\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/register\",\n        children: \"Register a new user\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n};\n_s(LoginForm, \"h/ISfqTSOJ0VWUUOy9l0sDb2ncM=\", false, function () {\n  return [useDispatch, useNavigate];\n});\n_c = LoginForm;\nexport default LoginForm;\nvar _c;\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"names":["React","useState","useDispatch","login","useNavigate","Link","jsxDEV","_jsxDEV","LoginForm","_s","email","setEmail","password","setPassword","dispatch","navigate","handleLogin","e","preventDefault","console","log","success","className","children","onSubmit","type","value","onChange","target","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","to","_c","$RefreshReg$"],"sources":["C:/Users/acer/Desktop/MERN_Todolist/forntend/src/components/LoginForm.jsx"],"sourcesContent":["// import React, { useState } from 'react';\r\n// import { useDispatch } from 'react-redux';\r\n// import { login } from '../redux/actions/authActions';\r\n// import { useNavigate } from 'react-router-dom';\r\n\r\n// const LoginForm = () => {\r\n//   const [email, setEmail] = useState('');\r\n//   const [password, setPassword] = useState('');\r\n\r\n//   const dispatch = useDispatch();\r\n//   const navigate = useNavigate();\r\n\r\n//   const handleLogin = async (e) => {\r\n//     e.preventDefault();\r\n//     console.log('Logging in with:', email, password);\r\n\r\n//     const success = await dispatch(login(email, password));\r\n//     if (success) {\r\n//       console.log('Login successful');\r\n//       navigate('/todos'); // Redirect to TodoList on successful login\r\n//     } else {\r\n//       console.log('Login failed');\r\n//       // Handle login failure (e.g., show an error message)\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div>\r\n//       <form onSubmit={handleLogin}>\r\n//         <input\r\n//           type=\"email\"\r\n//           value={email}\r\n//           onChange={(e) => setEmail(e.target.value)}\r\n//           placeholder=\"Email\"\r\n//         />\r\n//         <input\r\n//           type=\"password\"\r\n//           value={password}\r\n//           onChange={(e) => setPassword(e.target.value)}\r\n//           placeholder=\"Password\"\r\n//         />\r\n//         <button type=\"submit\">Login</button>\r\n//       </form>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default LoginForm;\r\n\r\nimport React, { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { login } from '../redux/actions/authActions';\r\nimport { useNavigate, Link } from 'react-router-dom';\r\nimport '../App.css'; // Import the CSS file\r\n\r\nconst LoginForm = () => {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n\r\n  const handleLogin = async (e) => {\r\n    e.preventDefault();\r\n    console.log('Logging in with:', email, password);\r\n\r\n    const success = await dispatch(login(email, password));\r\n    if (success) {\r\n      console.log('Login successful');\r\n      navigate('/todos'); // Redirect to TodoList on successful login\r\n    } else {\r\n      console.log('Login failed');\r\n      // Handle login failure (e.g., show an error message)\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"login-container\">\r\n      <form className=\"login-form\" onSubmit={handleLogin}>\r\n        <input\r\n          type=\"email\"\r\n          value={email}\r\n          onChange={(e) => setEmail(e.target.value)}\r\n          placeholder=\"Email\"\r\n        />\r\n        <input\r\n          type=\"password\"\r\n          value={password}\r\n          onChange={(e) => setPassword(e.target.value)}\r\n          placeholder=\"Password\"\r\n        />\r\n        <button type=\"submit\">Login</button>\r\n      </form>\r\n      <div className=\"register-link\">\r\n        <Link to=\"/register\">Register a new user</Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginForm;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}