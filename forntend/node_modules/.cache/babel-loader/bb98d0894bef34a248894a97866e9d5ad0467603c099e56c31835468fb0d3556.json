{"ast":null,"code":"import axios from 'axios';\nimport { ADDNEW_TODO, GETALL_TODO, TOGGLE_TODO, UPDATE_TODO, DELETE_TODO, TOGGLE_TAB } from './type';\nconst API_URL = 'http://localhost:8000';\n\n// export const addNewTodo = (data) => async (dispatch) => {\n//     try {\n//         const res = await axios.post(`${API_URL}/todos`, { data });\n\n//         dispatch({ type: ADDNEW_TODO , payload: res.data });\n//     } catch (error) {\n//         console.log('Error while calling addNewTodo API ', error.message);\n//     }\n// }\n// In redux/actions.js\n// In redux/actions.js\nexport const addNewTodo = data => {\n  return async dispatch => {\n    try {\n      const response = await fetch(\"http://localhost:8000/api/todos\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          data\n        }) // Use { data } instead of { data: text }\n      });\n\n      if (!response.ok) {\n        throw new Error(\"Failed to add new todo.\");\n      }\n      const newTodo = await response.json();\n\n      // Dispatch the action to add the newTodo to the Redux store\n      dispatch({\n        type: ADDNEW_TODO,\n        payload: newTodo\n      });\n    } catch (error) {\n      console.error(\"Error adding new todo:\", error);\n    }\n  };\n};\nexport const getAllTodos = () => async dispatch => {\n  try {\n    const res = await axios.get(`${API_URL}/todos`);\n    dispatch({\n      type: GETALL_TODO,\n      payload: res.data\n    });\n  } catch (error) {\n    console.log('Error while calling getAllTodos API ', error.message);\n  }\n};\nexport const toggleTodo = id => async dispatch => {\n  try {\n    const res = await axios.get(`${API_URL}/todos/${id}`);\n    dispatch({\n      type: TOGGLE_TODO,\n      payload: res.data\n    });\n  } catch (error) {\n    console.log('Error while calling getAllTodos API ', error.message);\n  }\n};\nexport const updateTodo = (id, data) => async dispatch => {\n  try {\n    const res = await axios.put(`${API_URL}/todos/${id}`, {\n      data\n    });\n    dispatch({\n      type: UPDATE_TODO,\n      payload: res.data\n    });\n  } catch (error) {\n    console.log('Error while calling updateTodo API ', error.message);\n  }\n};\nexport const deleteTodo = id => async dispatch => {\n  try {\n    const res = await axios.delete(`${API_URL}/todos/${id}`);\n    dispatch({\n      type: DELETE_TODO,\n      payload: res.data\n    });\n  } catch (error) {\n    console.log('Error while calling deleteTodo API ', error.message);\n  }\n};\nexport const toggleTab = tab => async dispatch => {\n  dispatch({\n    type: TOGGLE_TAB,\n    selected: tab\n  });\n};","map":{"version":3,"names":["axios","ADDNEW_TODO","GETALL_TODO","TOGGLE_TODO","UPDATE_TODO","DELETE_TODO","TOGGLE_TAB","API_URL","addNewTodo","data","dispatch","response","fetch","method","headers","body","JSON","stringify","ok","Error","newTodo","json","type","payload","error","console","getAllTodos","res","get","log","message","toggleTodo","id","updateTodo","put","deleteTodo","delete","toggleTab","tab","selected"],"sources":["C:/Users/acer/Desktop/MERN_Todolist/forntend/src/redux/actions/index.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nimport { ADDNEW_TODO, GETALL_TODO, TOGGLE_TODO, UPDATE_TODO, DELETE_TODO, TOGGLE_TAB } from './type';\r\n\r\nconst API_URL = 'http://localhost:8000';\r\n\r\n// export const addNewTodo = (data) => async (dispatch) => {\r\n//     try {\r\n//         const res = await axios.post(`${API_URL}/todos`, { data });\r\n\r\n//         dispatch({ type: ADDNEW_TODO , payload: res.data });\r\n//     } catch (error) {\r\n//         console.log('Error while calling addNewTodo API ', error.message);\r\n//     }\r\n// }\r\n// In redux/actions.js\r\n// In redux/actions.js\r\nexport const addNewTodo = (data) => {\r\n    return async (dispatch) => {\r\n      try {\r\n        const response = await fetch(\"http://localhost:8000/api/todos\", {\r\n          method: \"POST\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify({ data }), // Use { data } instead of { data: text }\r\n        });\r\n  \r\n        if (!response.ok) {\r\n          throw new Error(\"Failed to add new todo.\");\r\n        }\r\n  \r\n        const newTodo = await response.json();\r\n  \r\n        // Dispatch the action to add the newTodo to the Redux store\r\n        dispatch({ type: ADDNEW_TODO, payload: newTodo });\r\n      } catch (error) {\r\n        console.error(\"Error adding new todo:\", error);\r\n      }\r\n    };\r\n  };\r\n  \r\n  \r\n\r\n  \r\n\r\nexport const getAllTodos = () => async (dispatch) => {\r\n    try {\r\n        const res = await axios.get(`${API_URL}/todos`);\r\n\r\n        dispatch({ type: GETALL_TODO , payload: res.data });\r\n    } catch (error) {\r\n        console.log('Error while calling getAllTodos API ', error.message);\r\n    }\r\n}\r\n\r\nexport const toggleTodo = (id) => async (dispatch) => {\r\n    try {\r\n        const res = await axios.get(`${API_URL}/todos/${id}`);\r\n\r\n        dispatch({ type: TOGGLE_TODO , payload: res.data });\r\n    } catch (error) {\r\n        console.log('Error while calling getAllTodos API ', error.message);\r\n    }\r\n}\r\n\r\nexport const updateTodo = (id, data) => async (dispatch) => {\r\n    try {\r\n        const res = await axios.put(`${API_URL}/todos/${id}`, { data });\r\n\r\n        dispatch({ type: UPDATE_TODO , payload: res.data });\r\n    } catch (error) {\r\n        console.log('Error while calling updateTodo API ', error.message);\r\n    }\r\n}\r\n\r\nexport const deleteTodo = (id) => async (dispatch) => {\r\n    try {\r\n        const res = await axios.delete(`${API_URL}/todos/${id}`);\r\n\r\n        dispatch({ type: DELETE_TODO , payload: res.data });\r\n    } catch (error) {\r\n        console.log('Error while calling deleteTodo API ', error.message);\r\n    }\r\n}\r\n\r\nexport const toggleTab = (tab) => async (dispatch) => {\r\n    dispatch({ type: TOGGLE_TAB, selected: tab })\r\n}\r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}