{"ast":null,"code":"// import { createStore, combineReducers, applyMiddleware } from 'redux';\n// import thunk from 'redux-thunk';\n// import { composeWithDevTools } from 'redux-devtools-extension';\n\n// import { todosReducers } from './reducers/todosReducer';\n// import { tabReducer } from './reducers/tabReducer';\n\n// const reducer = combineReducers({\n//     todos: todosReducers,\n//     currentTab: tabReducer\n// })\n\n// const middleware = [thunk];\n\n// const store = createStore(\n//     reducer,\n//     composeWithDevTools(applyMiddleware(...middleware))\n// )\n\n// export default store;\nimport { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { todosReducers } from './reducers/todosReducer';\nimport { tabReducer } from './reducers/tabReducer';\n// import authReducer from './reducers/authReducer';\n\n// const rootReducer = combineReducers({\n//   auth: authReducer,\n// });\n\n// const reducer = combineReducers({\n//   todos: todosReducers,\n//   currentTab: tabReducer,\n// });\n\n// const middleware = [thunk];\n\n// // Use two separate stores for different reducers, if needed\n// const authStore = createStore(rootReducer, applyMiddleware(thunk));\n// const appStore = createStore(reducer, composeWithDevTools(applyMiddleware(...middleware)));\n\n// export { authStore, appStore };\n// ./redux/store.js\n\n// ./redux/store.js\nimport rootReducer from './reducers';\nconst store = createStore(rootReducer, applyMiddleware(thunk));\nexport default store;","map":{"version":3,"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","todosReducers","tabReducer","rootReducer","store"],"sources":["C:/Users/acer/Desktop/MERN_Todolist/forntend/src/redux/store.js"],"sourcesContent":["// import { createStore, combineReducers, applyMiddleware } from 'redux';\r\n// import thunk from 'redux-thunk';\r\n// import { composeWithDevTools } from 'redux-devtools-extension';\r\n\r\n// import { todosReducers } from './reducers/todosReducer';\r\n// import { tabReducer } from './reducers/tabReducer';\r\n\r\n// const reducer = combineReducers({\r\n//     todos: todosReducers,\r\n//     currentTab: tabReducer\r\n// })\r\n\r\n\r\n// const middleware = [thunk];\r\n\r\n// const store = createStore(\r\n//     reducer,\r\n//     composeWithDevTools(applyMiddleware(...middleware))\r\n// )\r\n\r\n// export default store;\r\nimport { createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\n\r\nimport { todosReducers } from './reducers/todosReducer';\r\nimport { tabReducer } from './reducers/tabReducer';\r\n// import authReducer from './reducers/authReducer';\r\n\r\n// const rootReducer = combineReducers({\r\n//   auth: authReducer,\r\n// });\r\n\r\n// const reducer = combineReducers({\r\n//   todos: todosReducers,\r\n//   currentTab: tabReducer,\r\n// });\r\n\r\n// const middleware = [thunk];\r\n\r\n// // Use two separate stores for different reducers, if needed\r\n// const authStore = createStore(rootReducer, applyMiddleware(thunk));\r\n// const appStore = createStore(reducer, composeWithDevTools(applyMiddleware(...middleware)));\r\n\r\n// export { authStore, appStore };\r\n// ./redux/store.js\r\n\r\n// ./redux/store.js\r\nimport rootReducer from './reducers';\r\n\r\nconst store = createStore(rootReducer, applyMiddleware(thunk));\r\n\r\nexport default store;\r\n\r\n\r\n"],"mappings":"AAAA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAGA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,SAASA,WAAW,EAAEC,eAAe,EAAEC,eAAe,QAAQ,OAAO;AACrE,OAAOC,KAAK,MAAM,aAAa;AAC/B,SAASC,mBAAmB,QAAQ,0BAA0B;AAE9D,SAASC,aAAa,QAAQ,yBAAyB;AACvD,SAASC,UAAU,QAAQ,uBAAuB;AAClD;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,OAAOC,WAAW,MAAM,YAAY;AAEpC,MAAMC,KAAK,GAAGR,WAAW,CAACO,WAAW,EAAEL,eAAe,CAACC,KAAK,CAAC,CAAC;AAE9D,eAAeK,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}