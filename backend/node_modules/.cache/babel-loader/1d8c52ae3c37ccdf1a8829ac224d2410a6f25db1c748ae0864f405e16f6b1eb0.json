{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\acer\\\\Desktop\\\\MERN_Todolist\\\\forntend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// // import './App.css';\n\n// // // components\n// // import Header from './components/Header';\n// // import TodoForm from './components/TodoForm';\n// // import Todos from './components/Todos';\n// // import React from 'react';\n// // import { Provider } from 'react-redux';\n// // import store from './store';\n// // import RegisterForm from './components/RegisterForm';\n\n// // function App() {\n// //   return (\n// //     <Provider store={store}>\n// //    <div>\n\n// //       <RegisterForm />\n// //       <Header />\n// //       <TodoForm />\n// //       <Todos />\n// //     </div>\n// //    </Provider>\n// //   );\n// // }\n// // import React, { useState } from 'react';\n// // import { useSelector } from 'react-redux';\n// // import { Provider } from 'react-redux';\n// // import Header from './components/Header';\n// // import TodoForm from './components/TodoForm';\n// // import Todos from './components/Todos';\n// // import RegisterForm from './components/RegisterForm';\n// // import LoginForm from './components/LoginForm';\n// // import store from './redux/store'; // Make sure to import your store here\n\n// // const App = () => {\n// //   // State to track user authentication status\n// //   const [isAuthenticated, setIsAuthenticated] = useState(false);\n\n// //   // Use Redux state to determine if the user is authenticated\n// //   const { token } = useSelector((state) => state.auth);\n\n// //   // Check if the user has a valid token (authenticated)\n// //   // Update the isAuthenticated state accordingly\n// //   if (token && !isAuthenticated) {\n// //     setIsAuthenticated(true);\n// //   }\n\n// //   return (\n// //     <Provider store={store}>\n// //       <div>\n// //         {!isAuthenticated ? (\n// //           // If not authenticated, render the register and login pages\n// //           <>\n// //             <RegisterForm />\n// //             <LoginForm />\n// //           </>\n// //         ) : (\n// //           // If authenticated, render the TodoList page\n// //           <>\n// //             <Header />\n// //             <TodoForm />\n// //             <Todos />\n// //           </>\n// //         )}\n// //       </div>\n// //     </Provider>\n// //   );\n// // };\n\n// // export default App;\n// import React, { useState } from 'react';\n// import { useSelector } from 'react-redux';\n// import Header from './components/Header';\n// import TodoForm from './components/TodoForm';\n// import Todos from './components/Todos';\n// import RegisterForm from './components/RegisterForm';\n// import LoginForm from './components/LoginForm';\n\n// const App = () => {\n//   // State to track user authentication status\n//   const [isAuthenticated, setIsAuthenticated] = useState(false);\n\n//   // Use Redux state to determine if the user is authenticated\n//   const { token } = useSelector((state) => state.auth);\n\n//   // Check if the user has a valid token (authenticated)\n//   // Update the isAuthenticated state accordingly\n//   if (token && !isAuthenticated) {\n//     setIsAuthenticated(true);\n//   }\n\n//   return (\n//     <div>\n//       {!isAuthenticated ? (\n//         // If not authenticated, render the register and login pages\n//         <>\n//           <RegisterForm />\n//           <LoginForm /> {/* Use LoginForm component here */}\n//         </>\n//       ) : (\n//         // If authenticated, render the TodoList page\n//         <>\n//           <Header />\n//           <TodoForm />\n//           <Todos />\n//         </>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default App;\n\n// App.js\n// import React, { useEffect } from 'react';\n// import { useDispatch, useSelector } from 'react-redux';\n// import { Provider } from 'react-redux';\n// import Header from './components/Header';\n// import TodoForm from './components/TodoForm';\n// import Todos from './components/Todos';\n// import RegisterForm from './components/RegisterForm';\n// import LoginForm from './components/LoginForm';\n// import store from './redux/store'; // Import your Redux store\n\n// const App = () => {\n//   const dispatch = useDispatch();\n//   const isAuthenticated = useSelector((state) => !!state.auth.token);\n\n//   // Fetch all Todos when the component mounts (you can adjust this as needed)\n//   useEffect(() => {\n//     // Add your action here to fetch initial data if needed\n//     // Example: dispatch(getAllTodos());\n//   }, [dispatch]);\n\n//   return (\n//     <Provider store={store}>\n//       <div>\n//         {!isAuthenticated ? (\n//           // If not authenticated, render the register and login pages\n//           <>\n//             <RegisterForm />\n//             <LoginForm />\n//           </>\n//         ) : (\n//           // If authenticated, render the TodoList page\n//           <>\n//             <Header />\n//             <TodoForm />\n//             <Todos />\n//           </>\n//         )}\n//       </div>\n//     </Provider>\n//   );\n// };\n\n// export default App;\n////////////\n// src/App.js\n// import React from 'react';\n// import { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\n// import LoginForm from './components/LoginForm';\n// import Todos from './components/Todos';\n// import { createRoot } from 'react-dom/client';\n// import './App.css';\n\n// const App = () => {\n//   return (\n//     <Router>\n//       <Routes>\n//         <Route path=\"/login\" element={<LoginForm />} />\n//         <Route path=\"/todos\" element={<Todos />} />\n//         {/* Add other routes if needed */}\n//       </Routes>\n//     </Router>\n//   );\n// };\n\n// export default App;\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Provider } from 'react-redux';\nimport Header from './components/Header';\nimport TodoForm from './components/TodoForm';\nimport Todos from './components/Todos';\nimport RegisterForm from './components/RegisterForm';\nimport LoginForm from './components/LoginForm';\nimport store from './redux/store';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const dispatch = useDispatch();\n  const isAuthenticated = useSelector(state => !!state.auth.token);\n  useEffect(() => {\n    // Fetch all Todos when the component mounts (you can adjust this as needed)\n    // Example: dispatch(getAllTodos());\n  }, [dispatch]);\n  return /*#__PURE__*/_jsxDEV(Provider, {\n    store: store,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: !isAuthenticated ?\n      /*#__PURE__*/\n      // If not authenticated, render the register and login pages\n      _jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(LoginForm, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 13\n        }, this)\n      }, void 0, false) :\n      /*#__PURE__*/\n      // If authenticated, render the TodoList page\n      _jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TodoForm, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Todos, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 201,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"T2nBbBvk/pVQF1s6OCZxJ+kwr+8=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useDispatch","useSelector","Provider","Header","TodoForm","Todos","RegisterForm","LoginForm","store","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","dispatch","isAuthenticated","state","auth","token","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/acer/Desktop/MERN_Todolist/forntend/src/App.js"],"sourcesContent":["// // import './App.css';\n\n// // // components\n// // import Header from './components/Header';\n// // import TodoForm from './components/TodoForm';\n// // import Todos from './components/Todos';\n// // import React from 'react';\n// // import { Provider } from 'react-redux';\n// // import store from './store';\n// // import RegisterForm from './components/RegisterForm';\n\n// // function App() {\n// //   return (\n// //     <Provider store={store}>\n// //    <div>\n      \n// //       <RegisterForm />\n// //       <Header />\n// //       <TodoForm />\n// //       <Todos />\n// //     </div>\n// //    </Provider>\n// //   );\n// // }\n// // import React, { useState } from 'react';\n// // import { useSelector } from 'react-redux';\n// // import { Provider } from 'react-redux';\n// // import Header from './components/Header';\n// // import TodoForm from './components/TodoForm';\n// // import Todos from './components/Todos';\n// // import RegisterForm from './components/RegisterForm';\n// // import LoginForm from './components/LoginForm';\n// // import store from './redux/store'; // Make sure to import your store here\n\n// // const App = () => {\n// //   // State to track user authentication status\n// //   const [isAuthenticated, setIsAuthenticated] = useState(false);\n\n// //   // Use Redux state to determine if the user is authenticated\n// //   const { token } = useSelector((state) => state.auth);\n\n// //   // Check if the user has a valid token (authenticated)\n// //   // Update the isAuthenticated state accordingly\n// //   if (token && !isAuthenticated) {\n// //     setIsAuthenticated(true);\n// //   }\n\n// //   return (\n// //     <Provider store={store}>\n// //       <div>\n// //         {!isAuthenticated ? (\n// //           // If not authenticated, render the register and login pages\n// //           <>\n// //             <RegisterForm />\n// //             <LoginForm />\n// //           </>\n// //         ) : (\n// //           // If authenticated, render the TodoList page\n// //           <>\n// //             <Header />\n// //             <TodoForm />\n// //             <Todos />\n// //           </>\n// //         )}\n// //       </div>\n// //     </Provider>\n// //   );\n// // };\n\n// // export default App;\n// import React, { useState } from 'react';\n// import { useSelector } from 'react-redux';\n// import Header from './components/Header';\n// import TodoForm from './components/TodoForm';\n// import Todos from './components/Todos';\n// import RegisterForm from './components/RegisterForm';\n// import LoginForm from './components/LoginForm';\n\n// const App = () => {\n//   // State to track user authentication status\n//   const [isAuthenticated, setIsAuthenticated] = useState(false);\n\n//   // Use Redux state to determine if the user is authenticated\n//   const { token } = useSelector((state) => state.auth);\n\n//   // Check if the user has a valid token (authenticated)\n//   // Update the isAuthenticated state accordingly\n//   if (token && !isAuthenticated) {\n//     setIsAuthenticated(true);\n//   }\n\n//   return (\n//     <div>\n//       {!isAuthenticated ? (\n//         // If not authenticated, render the register and login pages\n//         <>\n//           <RegisterForm />\n//           <LoginForm /> {/* Use LoginForm component here */}\n//         </>\n//       ) : (\n//         // If authenticated, render the TodoList page\n//         <>\n//           <Header />\n//           <TodoForm />\n//           <Todos />\n//         </>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default App;\n\n// App.js\n// import React, { useEffect } from 'react';\n// import { useDispatch, useSelector } from 'react-redux';\n// import { Provider } from 'react-redux';\n// import Header from './components/Header';\n// import TodoForm from './components/TodoForm';\n// import Todos from './components/Todos';\n// import RegisterForm from './components/RegisterForm';\n// import LoginForm from './components/LoginForm';\n// import store from './redux/store'; // Import your Redux store\n\n// const App = () => {\n//   const dispatch = useDispatch();\n//   const isAuthenticated = useSelector((state) => !!state.auth.token);\n\n//   // Fetch all Todos when the component mounts (you can adjust this as needed)\n//   useEffect(() => {\n//     // Add your action here to fetch initial data if needed\n//     // Example: dispatch(getAllTodos());\n//   }, [dispatch]);\n\n//   return (\n//     <Provider store={store}>\n//       <div>\n//         {!isAuthenticated ? (\n//           // If not authenticated, render the register and login pages\n//           <>\n//             <RegisterForm />\n//             <LoginForm />\n//           </>\n//         ) : (\n//           // If authenticated, render the TodoList page\n//           <>\n//             <Header />\n//             <TodoForm />\n//             <Todos />\n//           </>\n//         )}\n//       </div>\n//     </Provider>\n//   );\n// };\n\n// export default App;\n////////////\n// src/App.js\n// import React from 'react';\n// import { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\n// import LoginForm from './components/LoginForm';\n// import Todos from './components/Todos';\n// import { createRoot } from 'react-dom/client';\n// import './App.css';\n\n\n// const App = () => {\n//   return (\n//     <Router>\n//       <Routes>\n//         <Route path=\"/login\" element={<LoginForm />} />\n//         <Route path=\"/todos\" element={<Todos />} />\n//         {/* Add other routes if needed */}\n//       </Routes>\n//     </Router>\n//   );\n// };\n\n// export default App;\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Provider } from 'react-redux';\nimport Header from './components/Header';\nimport TodoForm from './components/TodoForm';\nimport Todos from './components/Todos';\nimport RegisterForm from './components/RegisterForm';\nimport LoginForm from './components/LoginForm';\nimport store from './redux/store';\n\nconst App = () => {\n  const dispatch = useDispatch();\n  const isAuthenticated = useSelector((state) => !!state.auth.token);\n\n  useEffect(() => {\n    // Fetch all Todos when the component mounts (you can adjust this as needed)\n    // Example: dispatch(getAllTodos());\n  }, [dispatch]);\n\n  return (\n    <Provider store={store}>\n      <div>\n        {!isAuthenticated ? (\n          // If not authenticated, render the register and login pages\n          <>\n            <LoginForm />\n          </>\n        ) : (\n          // If authenticated, render the TodoList page\n          <>\n            <Header />\n            <TodoForm />\n            <Todos />\n          </>\n        )}\n      </div>\n    </Provider>\n  );\n};\n\nexport default App;\n\n\n\n\n"],"mappings":";;AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,QAAQ,QAAQ,aAAa;AACtC,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAOC,KAAK,MAAM,oBAAoB;AACtC,OAAOC,YAAY,MAAM,2BAA2B;AACpD,OAAOC,SAAS,MAAM,wBAAwB;AAC9C,OAAOC,KAAK,MAAM,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAElC,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAMC,QAAQ,GAAGf,WAAW,CAAC,CAAC;EAC9B,MAAMgB,eAAe,GAAGf,WAAW,CAAEgB,KAAK,IAAK,CAAC,CAACA,KAAK,CAACC,IAAI,CAACC,KAAK,CAAC;EAElEpB,SAAS,CAAC,MAAM;IACd;IACA;EAAA,CACD,EAAE,CAACgB,QAAQ,CAAC,CAAC;EAEd,oBACEL,OAAA,CAACR,QAAQ;IAACM,KAAK,EAAEA,KAAM;IAAAY,QAAA,eACrBV,OAAA;MAAAU,QAAA,EACG,CAACJ,eAAe;MAAA;MACf;MACAN,OAAA,CAAAE,SAAA;QAAAQ,QAAA,eACEV,OAAA,CAACH,SAAS;UAAAc,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC,gBACb,CAAC;MAAA;MAEH;MACAd,OAAA,CAAAE,SAAA;QAAAQ,QAAA,gBACEV,OAAA,CAACP,MAAM;UAAAkB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACVd,OAAA,CAACN,QAAQ;UAAAiB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACZd,OAAA,CAACL,KAAK;UAAAgB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA,eACT;IACH;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEf,CAAC;AAACV,EAAA,CA5BID,GAAG;EAAA,QACUb,WAAW,EACJC,WAAW;AAAA;AAAAwB,EAAA,GAF/BZ,GAAG;AA8BT,eAAeA,GAAG;AAAC,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}