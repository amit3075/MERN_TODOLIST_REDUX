{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\acer\\\\Desktop\\\\MERN_Todolist\\\\forntend\\\\src\\\\components\\\\Todos.jsx\",\n  _s = $RefreshSig$();\n// import { useEffect } from 'react';\n\n// import { deleteTodo, getAllTodos } from '../redux/actions/index';\n// import { ALL_TODOS, DONE_TODOS, ACTIVE_TODOS } from '../redux/actions/type';\n\n// import { useDispatch, useSelector } from 'react-redux';\n\n// // component\n// import Todo from './Todo';\n// import Tabs from './Tabs';\n\n// export const Todos = () => {\n\n//     const dispatch = useDispatch();\n\n//     const todos = useSelector(state => state.todos);\n//     const currentTab = useSelector(state => state.currentTab);\n\n//     useEffect(() => {\n//         dispatch(getAllTodos());\n//     }, [])\n\n//     const getTodos = () => {\n//         if (currentTab === ALL_TODOS) {\n//             return todos;\n//         } else if (currentTab === ACTIVE_TODOS) {\n//             return todos.filter(todo => !todo.done)\n//         } else if (currentTab === DONE_TODOS) {\n//             return todos.filter(todo => todo.done)\n//         }\n//     }\n\n//     const removeDoneTodos = () => {\n//         todos.forEach(({ done, _id }) => {\n//             if (done) {\n//                 dispatch(deleteTodo(_id));\n//             }\n//         })\n//     }\n\n//     return (\n//         <article>\n//             <div>\n//                 <Tabs currentTab={currentTab} />\n\n//                 {\n//                     todos.some(todo => todo.done) ? (\n//                         <button\n//                             onClick={removeDoneTodos}\n//                             className=\"button clear\"\n//                         >Remove Done Todos</button>\n//                     ) : null    \n//                 }\n//             </div>\n\n//             <ul>\n//                 {\n//                     getTodos().map(todo => (\n//                         <Todo \n//                             key={todo._id}\n//                             todo={todo}\n//                         />\n//                     ))\n//                 }\n//             </ul>\n//         </article>\n//     )\n// }\n\n//export default Todos;\n// import React, { useEffect } from 'react';\n// import { useDispatch, useSelector } from 'react-redux';\n// import { getAllTodos, deleteTodo } from '../redux/actions';\n// import Todo from './Todo';\n// import Tabs from './Tabs';\n\n// const Todos = () => {\n//   const dispatch = useDispatch();\n//   const todos = useSelector((state) => state.todos);\n//   const currentTab = useSelector((state) => state.currentTab);\n\n//   useEffect(() => {\n//     dispatch(getAllTodos());\n//   }, [dispatch]);\n\n//   const getTodos = () => {\n//     if (currentTab === 'All Todos') {\n//       return todos;\n//     } else if (currentTab === 'Active Todos') {\n//       return todos.filter((todo) => !todo.done);\n//     } else if (currentTab === 'Done Todos') {\n//       return todos.filter((todo) => todo.done);\n//     }\n//     return []; // Return an empty array if no condition matches to avoid 'map' error.\n//   };\n\n//   const removeDoneTodos = () => {\n//     todos.forEach(({ done, _id }) => {\n//       if (done) {\n//         dispatch(deleteTodo(_id));\n//       }\n//     });\n//   };\n\n//   return (\n//     <article>\n//       <div>\n//         <Tabs currentTab={currentTab} />\n\n//         {todos.some((todo) => todo.done) ? (\n//           <button onClick={removeDoneTodos} className=\"button clear\">\n//             Remove Done Todos\n//           </button>\n//         ) : null}\n//       </div>\n\n//       <ul>\n//         {getTodos().map((todo) => (\n//           <Todo key={todo._id} todo={todo} />\n//         ))}\n//       </ul>\n//     </article>\n//   );\n// };\n\n// export default Todos;\n// import React , { useEffect }from 'react';\n// import { useDispatch, useSelector } from 'react-redux';\n// import { getAllTodos, deleteTodo } from '../redux/actions/index';\n// import Todo from './Todo';\n// import Tabs from './Tabs';\n// import TodoForm from './TodoForm'; // Import the TodoForm component\n\n// const Todos = () => {\n//   const dispatch = useDispatch();\n//   const todos = useSelector((state) => state.todos);\n//   const currentTab = useSelector((state) => state.currentTab);\n\n//   useEffect(() => {\n//     dispatch(getAllTodos());\n//   }, [dispatch]);\n\n//   const getTodos = () => {\n//     if (currentTab === 'All Todos') {\n//       return todos;\n//     } else if (currentTab === 'Active Todos') {\n//       return todos.filter((todo) => !todo.done);\n//     } else if (currentTab === 'Done Todos') {\n//       return todos.filter((todo) => todo.done);\n//     }\n//   };\n\n//   const removeDoneTodos = () => {\n//     todos.forEach(({ done, _id }) => {\n//       if (done) {\n//         dispatch(deleteTodo(_id));\n//       }\n//     });\n//   };\n\n//   return (\n//     <article>\n//       <div>\n//         <TodoForm /> {/* Include the TodoForm component here */}\n//         <Tabs currentTab={currentTab} />\n\n//         {todos.some((todo) => todo.done) ? (\n//           <button onClick={removeDoneTodos} className=\"button clear\">\n//             Remove Done Todos\n//           </button>\n//         ) : null}\n//       </div>\n\n//       <ul>\n//         {getTodos().map((todo) => (\n//           <Todo key={todo._id} todo={todo} />\n//         ))}\n//       </ul>\n//     </article>\n//   );\n// };\n\n// export default Todos;\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getAllTodos, deleteTodo } from '../redux/actions/index.js';\nimport Todo from './Todo';\nimport Tabs from './Tabs';\nimport TodoForm from './TodoForm';\nimport Header from './Header';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Todos = () => {\n  _s();\n  const dispatch = useDispatch();\n  const todos = useSelector(state => state.todos);\n  const currentTab = useSelector(state => state.currentTab);\n  useEffect(() => {\n    dispatch(getAllTodos());\n  }, [dispatch]);\n  const getTodos = () => {\n    if (!todos) return []; // Handle the case when todos is undefined\n    if (currentTab === 'All Todos') {\n      console.log(currentTab);\n      return todos;\n    } else if (currentTab === 'Active Todos') {\n      return todos.filter(todo => !todo.done);\n    } else if (currentTab === 'Done Todos') {\n      return todos.filter(todo => todo.done);\n    } else {\n      return []; // Handle the case when the currentTab is not recognized\n    }\n  };\n\n  const removeDoneTodos = () => {\n    if (!todos) return; // Ensure todos is not undefined\n    todos.forEach(({\n      done,\n      _id\n    }) => {\n      if (done) {\n        dispatch(deleteTodo(_id));\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"article\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TodoForm, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Tabs, {\n        currentTab: currentTab\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 9\n      }, this), todos && todos.some(todo => todo.done) ? /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: removeDoneTodos,\n        className: \"button clear\",\n        children: \"Remove Done Todos\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 11\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: getTodos().map(todo => /*#__PURE__*/_jsxDEV(Todo, {\n        todo: todo\n      }, todo._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 228,\n    columnNumber: 5\n  }, this);\n};\n_s(Todos, \"NTT9ffX9tf+K99yogg77aoZF784=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n_c = Todos;\nexport default Todos;\nvar _c;\n$RefreshReg$(_c, \"Todos\");","map":{"version":3,"names":["React","useEffect","useDispatch","useSelector","getAllTodos","deleteTodo","Todo","Tabs","TodoForm","Header","jsxDEV","_jsxDEV","Todos","_s","dispatch","todos","state","currentTab","getTodos","console","log","filter","todo","done","removeDoneTodos","forEach","_id","children","fileName","_jsxFileName","lineNumber","columnNumber","some","onClick","className","map","_c","$RefreshReg$"],"sources":["C:/Users/acer/Desktop/MERN_Todolist/forntend/src/components/Todos.jsx"],"sourcesContent":["// import { useEffect } from 'react';\r\n\r\n// import { deleteTodo, getAllTodos } from '../redux/actions/index';\r\n// import { ALL_TODOS, DONE_TODOS, ACTIVE_TODOS } from '../redux/actions/type';\r\n\r\n// import { useDispatch, useSelector } from 'react-redux';\r\n\r\n\r\n// // component\r\n// import Todo from './Todo';\r\n// import Tabs from './Tabs';\r\n\r\n\r\n// export const Todos = () => {\r\n\r\n//     const dispatch = useDispatch();\r\n\r\n//     const todos = useSelector(state => state.todos);\r\n//     const currentTab = useSelector(state => state.currentTab);\r\n\r\n//     useEffect(() => {\r\n//         dispatch(getAllTodos());\r\n//     }, [])\r\n\r\n//     const getTodos = () => {\r\n//         if (currentTab === ALL_TODOS) {\r\n//             return todos;\r\n//         } else if (currentTab === ACTIVE_TODOS) {\r\n//             return todos.filter(todo => !todo.done)\r\n//         } else if (currentTab === DONE_TODOS) {\r\n//             return todos.filter(todo => todo.done)\r\n//         }\r\n//     }\r\n\r\n//     const removeDoneTodos = () => {\r\n//         todos.forEach(({ done, _id }) => {\r\n//             if (done) {\r\n//                 dispatch(deleteTodo(_id));\r\n//             }\r\n//         })\r\n//     }\r\n\r\n//     return (\r\n//         <article>\r\n//             <div>\r\n//                 <Tabs currentTab={currentTab} />\r\n\r\n//                 {\r\n//                     todos.some(todo => todo.done) ? (\r\n//                         <button\r\n//                             onClick={removeDoneTodos}\r\n//                             className=\"button clear\"\r\n//                         >Remove Done Todos</button>\r\n//                     ) : null    \r\n//                 }\r\n//             </div>\r\n\r\n//             <ul>\r\n//                 {\r\n//                     getTodos().map(todo => (\r\n//                         <Todo \r\n//                             key={todo._id}\r\n//                             todo={todo}\r\n//                         />\r\n//                     ))\r\n//                 }\r\n//             </ul>\r\n//         </article>\r\n//     )\r\n// }\r\n\r\n//export default Todos;\r\n// import React, { useEffect } from 'react';\r\n// import { useDispatch, useSelector } from 'react-redux';\r\n// import { getAllTodos, deleteTodo } from '../redux/actions';\r\n// import Todo from './Todo';\r\n// import Tabs from './Tabs';\r\n\r\n// const Todos = () => {\r\n//   const dispatch = useDispatch();\r\n//   const todos = useSelector((state) => state.todos);\r\n//   const currentTab = useSelector((state) => state.currentTab);\r\n\r\n//   useEffect(() => {\r\n//     dispatch(getAllTodos());\r\n//   }, [dispatch]);\r\n\r\n//   const getTodos = () => {\r\n//     if (currentTab === 'All Todos') {\r\n//       return todos;\r\n//     } else if (currentTab === 'Active Todos') {\r\n//       return todos.filter((todo) => !todo.done);\r\n//     } else if (currentTab === 'Done Todos') {\r\n//       return todos.filter((todo) => todo.done);\r\n//     }\r\n//     return []; // Return an empty array if no condition matches to avoid 'map' error.\r\n//   };\r\n\r\n//   const removeDoneTodos = () => {\r\n//     todos.forEach(({ done, _id }) => {\r\n//       if (done) {\r\n//         dispatch(deleteTodo(_id));\r\n//       }\r\n//     });\r\n//   };\r\n\r\n//   return (\r\n//     <article>\r\n//       <div>\r\n//         <Tabs currentTab={currentTab} />\r\n\r\n//         {todos.some((todo) => todo.done) ? (\r\n//           <button onClick={removeDoneTodos} className=\"button clear\">\r\n//             Remove Done Todos\r\n//           </button>\r\n//         ) : null}\r\n//       </div>\r\n\r\n//       <ul>\r\n//         {getTodos().map((todo) => (\r\n//           <Todo key={todo._id} todo={todo} />\r\n//         ))}\r\n//       </ul>\r\n//     </article>\r\n//   );\r\n// };\r\n\r\n// export default Todos;\r\n// import React , { useEffect }from 'react';\r\n// import { useDispatch, useSelector } from 'react-redux';\r\n// import { getAllTodos, deleteTodo } from '../redux/actions/index';\r\n// import Todo from './Todo';\r\n// import Tabs from './Tabs';\r\n// import TodoForm from './TodoForm'; // Import the TodoForm component\r\n\r\n// const Todos = () => {\r\n//   const dispatch = useDispatch();\r\n//   const todos = useSelector((state) => state.todos);\r\n//   const currentTab = useSelector((state) => state.currentTab);\r\n\r\n//   useEffect(() => {\r\n//     dispatch(getAllTodos());\r\n//   }, [dispatch]);\r\n\r\n//   const getTodos = () => {\r\n//     if (currentTab === 'All Todos') {\r\n//       return todos;\r\n//     } else if (currentTab === 'Active Todos') {\r\n//       return todos.filter((todo) => !todo.done);\r\n//     } else if (currentTab === 'Done Todos') {\r\n//       return todos.filter((todo) => todo.done);\r\n//     }\r\n//   };\r\n\r\n//   const removeDoneTodos = () => {\r\n//     todos.forEach(({ done, _id }) => {\r\n//       if (done) {\r\n//         dispatch(deleteTodo(_id));\r\n//       }\r\n//     });\r\n//   };\r\n\r\n//   return (\r\n//     <article>\r\n//       <div>\r\n//         <TodoForm /> {/* Include the TodoForm component here */}\r\n//         <Tabs currentTab={currentTab} />\r\n\r\n//         {todos.some((todo) => todo.done) ? (\r\n//           <button onClick={removeDoneTodos} className=\"button clear\">\r\n//             Remove Done Todos\r\n//           </button>\r\n//         ) : null}\r\n//       </div>\r\n\r\n//       <ul>\r\n//         {getTodos().map((todo) => (\r\n//           <Todo key={todo._id} todo={todo} />\r\n//         ))}\r\n//       </ul>\r\n//     </article>\r\n//   );\r\n// };\r\n\r\n// export default Todos;\r\nimport React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getAllTodos, deleteTodo } from '../redux/actions/index.js';\r\nimport Todo from './Todo';\r\nimport Tabs from './Tabs';\r\nimport TodoForm from './TodoForm';\r\nimport Header from './Header';\r\n\r\nconst Todos = () => {\r\n  const dispatch = useDispatch();\r\n  const todos = useSelector((state) => state.todos);\r\n  const currentTab = useSelector((state) => state.currentTab);\r\n\r\n  useEffect(() => {\r\n    dispatch(getAllTodos());\r\n  }, [dispatch]);\r\n\r\n  const getTodos = () => {\r\n    if (!todos) return []; // Handle the case when todos is undefined\r\n    if (currentTab === 'All Todos') {\r\n        console.log(currentTab);\r\n      return todos;\r\n    } else if (currentTab === 'Active Todos') {\r\n      return todos.filter((todo) => !todo.done);\r\n    } else if (currentTab === 'Done Todos') {\r\n      return todos.filter((todo) => todo.done);\r\n    } else {\r\n      return []; // Handle the case when the currentTab is not recognized\r\n    }\r\n  \r\n  };\r\n\r\n  const removeDoneTodos = () => {\r\n    if (!todos) return; // Ensure todos is not undefined\r\n    todos.forEach(({ done, _id }) => {\r\n      if (done) {\r\n        dispatch(deleteTodo(_id));\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <article>\r\n      <div>\r\n        <Header/>\r\n        <TodoForm/>\r\n        <Tabs currentTab={currentTab} />\r\n\r\n        {todos && todos.some((todo) => todo.done) ? (\r\n          <button onClick={removeDoneTodos} className=\"button clear\">\r\n            Remove Done Todos\r\n          </button>\r\n        ) : null}\r\n        \r\n      </div>\r\n\r\n      <ul>\r\n        {getTodos().map((todo) => (\r\n          <Todo key={todo._id} todo={todo} />\r\n        ))}\r\n       \r\n      </ul>\r\n    </article>\r\n  );\r\n};\r\n\r\nexport default Todos;\r\n"],"mappings":";;AAAA;;AAEA;AACA;;AAEA;;AAGA;AACA;AACA;;AAGA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,WAAW,EAAEC,UAAU,QAAQ,2BAA2B;AACnE,OAAOC,IAAI,MAAM,QAAQ;AACzB,OAAOC,IAAI,MAAM,QAAQ;AACzB,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAOC,MAAM,MAAM,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9B,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAMC,QAAQ,GAAGZ,WAAW,CAAC,CAAC;EAC9B,MAAMa,KAAK,GAAGZ,WAAW,CAAEa,KAAK,IAAKA,KAAK,CAACD,KAAK,CAAC;EACjD,MAAME,UAAU,GAAGd,WAAW,CAAEa,KAAK,IAAKA,KAAK,CAACC,UAAU,CAAC;EAE3DhB,SAAS,CAAC,MAAM;IACda,QAAQ,CAACV,WAAW,CAAC,CAAC,CAAC;EACzB,CAAC,EAAE,CAACU,QAAQ,CAAC,CAAC;EAEd,MAAMI,QAAQ,GAAGA,CAAA,KAAM;IACrB,IAAI,CAACH,KAAK,EAAE,OAAO,EAAE,CAAC,CAAC;IACvB,IAAIE,UAAU,KAAK,WAAW,EAAE;MAC5BE,OAAO,CAACC,GAAG,CAACH,UAAU,CAAC;MACzB,OAAOF,KAAK;IACd,CAAC,MAAM,IAAIE,UAAU,KAAK,cAAc,EAAE;MACxC,OAAOF,KAAK,CAACM,MAAM,CAAEC,IAAI,IAAK,CAACA,IAAI,CAACC,IAAI,CAAC;IAC3C,CAAC,MAAM,IAAIN,UAAU,KAAK,YAAY,EAAE;MACtC,OAAOF,KAAK,CAACM,MAAM,CAAEC,IAAI,IAAKA,IAAI,CAACC,IAAI,CAAC;IAC1C,CAAC,MAAM;MACL,OAAO,EAAE,CAAC,CAAC;IACb;EAEF,CAAC;;EAED,MAAMC,eAAe,GAAGA,CAAA,KAAM;IAC5B,IAAI,CAACT,KAAK,EAAE,OAAO,CAAC;IACpBA,KAAK,CAACU,OAAO,CAAC,CAAC;MAAEF,IAAI;MAAEG;IAAI,CAAC,KAAK;MAC/B,IAAIH,IAAI,EAAE;QACRT,QAAQ,CAACT,UAAU,CAACqB,GAAG,CAAC,CAAC;MAC3B;IACF,CAAC,CAAC;EACJ,CAAC;EAED,oBACEf,OAAA;IAAAgB,QAAA,gBACEhB,OAAA;MAAAgB,QAAA,gBACEhB,OAAA,CAACF,MAAM;QAAAmB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eACTpB,OAAA,CAACH,QAAQ;QAAAoB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eACXpB,OAAA,CAACJ,IAAI;QAACU,UAAU,EAAEA;MAAW;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,EAE/BhB,KAAK,IAAIA,KAAK,CAACiB,IAAI,CAAEV,IAAI,IAAKA,IAAI,CAACC,IAAI,CAAC,gBACvCZ,OAAA;QAAQsB,OAAO,EAAET,eAAgB;QAACU,SAAS,EAAC,cAAc;QAAAP,QAAA,EAAC;MAE3D;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,GACP,IAAI;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEL,CAAC,eAENpB,OAAA;MAAAgB,QAAA,EACGT,QAAQ,CAAC,CAAC,CAACiB,GAAG,CAAEb,IAAI,iBACnBX,OAAA,CAACL,IAAI;QAAgBgB,IAAI,EAAEA;MAAK,GAArBA,IAAI,CAACI,GAAG;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAe,CACnC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEd,CAAC;AAAClB,EAAA,CAxDID,KAAK;EAAA,QACQV,WAAW,EACdC,WAAW,EACNA,WAAW;AAAA;AAAAiC,EAAA,GAH1BxB,KAAK;AA0DX,eAAeA,KAAK;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}