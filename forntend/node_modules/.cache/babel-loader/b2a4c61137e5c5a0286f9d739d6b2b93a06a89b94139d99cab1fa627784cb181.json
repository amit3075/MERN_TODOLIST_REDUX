{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\acer\\\\Desktop\\\\MERN_Todolist\\\\forntend\\\\src\\\\App.js\";\n// // import './App.css';\n\n// // // components\n// // import Header from './components/Header';\n// // import TodoForm from './components/TodoForm';\n// // import Todos from './components/Todos';\n// // import React from 'react';\n// // import { Provider } from 'react-redux';\n// // import store from './store';\n// // import RegisterForm from './components/RegisterForm';\n\n// // function App() {\n// //   return (\n// //     <Provider store={store}>\n// //    <div>\n\n// //       <RegisterForm />\n// //       <Header />\n// //       <TodoForm />\n// //       <Todos />\n// //     </div>\n// //    </Provider>\n// //   );\n// // }\n// // import React, { useState } from 'react';\n// // import { useSelector } from 'react-redux';\n// // import { Provider } from 'react-redux';\n// // import Header from './components/Header';\n// // import TodoForm from './components/TodoForm';\n// // import Todos from './components/Todos';\n// // import RegisterForm from './components/RegisterForm';\n// // import LoginForm from './components/LoginForm';\n// // import store from './redux/store'; // Make sure to import your store here\n\n// // const App = () => {\n// //   // State to track user authentication status\n// //   const [isAuthenticated, setIsAuthenticated] = useState(false);\n\n// //   // Use Redux state to determine if the user is authenticated\n// //   const { token } = useSelector((state) => state.auth);\n\n// //   // Check if the user has a valid token (authenticated)\n// //   // Update the isAuthenticated state accordingly\n// //   if (token && !isAuthenticated) {\n// //     setIsAuthenticated(true);\n// //   }\n\n// //   return (\n// //     <Provider store={store}>\n// //       <div>\n// //         {!isAuthenticated ? (\n// //           // If not authenticated, render the register and login pages\n// //           <>\n// //             <RegisterForm />\n// //             <LoginForm />\n// //           </>\n// //         ) : (\n// //           // If authenticated, render the TodoList page\n// //           <>\n// //             <Header />\n// //             <TodoForm />\n// //             <Todos />\n// //           </>\n// //         )}\n// //       </div>\n// //     </Provider>\n// //   );\n// // };\n\n// // export default App;\n// import React, { useState } from 'react';\n// import { useSelector } from 'react-redux';\n// import Header from './components/Header';\n// import TodoForm from './components/TodoForm';\n// import Todos from './components/Todos';\n// import RegisterForm from './components/RegisterForm';\n// import LoginForm from './components/LoginForm';\n\n// const App = () => {\n//   // State to track user authentication status\n//   const [isAuthenticated, setIsAuthenticated] = useState(false);\n\n//   // Use Redux state to determine if the user is authenticated\n//   const { token } = useSelector((state) => state.auth);\n\n//   // Check if the user has a valid token (authenticated)\n//   // Update the isAuthenticated state accordingly\n//   if (token && !isAuthenticated) {\n//     setIsAuthenticated(true);\n//   }\n\n//   return (\n//     <div>\n//       {!isAuthenticated ? (\n//         // If not authenticated, render the register and login pages\n//         <>\n//           <RegisterForm />\n//           <LoginForm /> {/* Use LoginForm component here */}\n//         </>\n//       ) : (\n//         // If authenticated, render the TodoList page\n//         <>\n//           <Header />\n//           <TodoForm />\n//           <Todos />\n//         </>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default App;\n\n// App.js\n// import React, { useEffect } from 'react';\n// import { useDispatch, useSelector } from 'react-redux';\n// import { Provider } from 'react-redux';\n// import Header from './components/Header';\n// import TodoForm from './components/TodoForm';\n// import Todos from './components/Todos';\n// import RegisterForm from './components/RegisterForm';\n// import LoginForm from './components/LoginForm';\n// import store from './redux/store'; // Import your Redux store\n\n// const App = () => {\n//   const dispatch = useDispatch();\n//   const isAuthenticated = useSelector((state) => !!state.auth.token);\n\n//   // Fetch all Todos when the component mounts (you can adjust this as needed)\n//   useEffect(() => {\n//     // Add your action here to fetch initial data if needed\n//     // Example: dispatch(getAllTodos());\n//   }, [dispatch]);\n\n//   return (\n//     <Provider store={store}>\n//       <div>\n//         {!isAuthenticated ? (\n//           // If not authenticated, render the register and login pages\n//           <>\n//             <RegisterForm />\n//             <LoginForm />\n//           </>\n//         ) : (\n//           // If authenticated, render the TodoList page\n//           <>\n//             <Header />\n//             <TodoForm />\n//             <Todos />\n//           </>\n//         )}\n//       </div>\n//     </Provider>\n//   );\n// };\n\n// export default App;\n////////////\n// src/App.js\nimport React from 'react';\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\nimport LoginForm from './components/LoginForm';\nimport Todos from './components/Todos';\nimport { createRoot } from 'react-dom/client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/login\",\n        element: /*#__PURE__*/_jsxDEV(LoginForm, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 39\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/todos\",\n        element: /*#__PURE__*/_jsxDEV(Todos, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 39\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 168,\n    columnNumber: 5\n  }, this);\n};\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","BrowserRouter","Router","Route","Routes","LoginForm","Todos","createRoot","jsxDEV","_jsxDEV","App","children","path","element","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/acer/Desktop/MERN_Todolist/forntend/src/App.js"],"sourcesContent":["// // import './App.css';\n\n// // // components\n// // import Header from './components/Header';\n// // import TodoForm from './components/TodoForm';\n// // import Todos from './components/Todos';\n// // import React from 'react';\n// // import { Provider } from 'react-redux';\n// // import store from './store';\n// // import RegisterForm from './components/RegisterForm';\n\n// // function App() {\n// //   return (\n// //     <Provider store={store}>\n// //    <div>\n      \n// //       <RegisterForm />\n// //       <Header />\n// //       <TodoForm />\n// //       <Todos />\n// //     </div>\n// //    </Provider>\n// //   );\n// // }\n// // import React, { useState } from 'react';\n// // import { useSelector } from 'react-redux';\n// // import { Provider } from 'react-redux';\n// // import Header from './components/Header';\n// // import TodoForm from './components/TodoForm';\n// // import Todos from './components/Todos';\n// // import RegisterForm from './components/RegisterForm';\n// // import LoginForm from './components/LoginForm';\n// // import store from './redux/store'; // Make sure to import your store here\n\n// // const App = () => {\n// //   // State to track user authentication status\n// //   const [isAuthenticated, setIsAuthenticated] = useState(false);\n\n// //   // Use Redux state to determine if the user is authenticated\n// //   const { token } = useSelector((state) => state.auth);\n\n// //   // Check if the user has a valid token (authenticated)\n// //   // Update the isAuthenticated state accordingly\n// //   if (token && !isAuthenticated) {\n// //     setIsAuthenticated(true);\n// //   }\n\n// //   return (\n// //     <Provider store={store}>\n// //       <div>\n// //         {!isAuthenticated ? (\n// //           // If not authenticated, render the register and login pages\n// //           <>\n// //             <RegisterForm />\n// //             <LoginForm />\n// //           </>\n// //         ) : (\n// //           // If authenticated, render the TodoList page\n// //           <>\n// //             <Header />\n// //             <TodoForm />\n// //             <Todos />\n// //           </>\n// //         )}\n// //       </div>\n// //     </Provider>\n// //   );\n// // };\n\n// // export default App;\n// import React, { useState } from 'react';\n// import { useSelector } from 'react-redux';\n// import Header from './components/Header';\n// import TodoForm from './components/TodoForm';\n// import Todos from './components/Todos';\n// import RegisterForm from './components/RegisterForm';\n// import LoginForm from './components/LoginForm';\n\n// const App = () => {\n//   // State to track user authentication status\n//   const [isAuthenticated, setIsAuthenticated] = useState(false);\n\n//   // Use Redux state to determine if the user is authenticated\n//   const { token } = useSelector((state) => state.auth);\n\n//   // Check if the user has a valid token (authenticated)\n//   // Update the isAuthenticated state accordingly\n//   if (token && !isAuthenticated) {\n//     setIsAuthenticated(true);\n//   }\n\n//   return (\n//     <div>\n//       {!isAuthenticated ? (\n//         // If not authenticated, render the register and login pages\n//         <>\n//           <RegisterForm />\n//           <LoginForm /> {/* Use LoginForm component here */}\n//         </>\n//       ) : (\n//         // If authenticated, render the TodoList page\n//         <>\n//           <Header />\n//           <TodoForm />\n//           <Todos />\n//         </>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default App;\n\n// App.js\n// import React, { useEffect } from 'react';\n// import { useDispatch, useSelector } from 'react-redux';\n// import { Provider } from 'react-redux';\n// import Header from './components/Header';\n// import TodoForm from './components/TodoForm';\n// import Todos from './components/Todos';\n// import RegisterForm from './components/RegisterForm';\n// import LoginForm from './components/LoginForm';\n// import store from './redux/store'; // Import your Redux store\n\n// const App = () => {\n//   const dispatch = useDispatch();\n//   const isAuthenticated = useSelector((state) => !!state.auth.token);\n\n//   // Fetch all Todos when the component mounts (you can adjust this as needed)\n//   useEffect(() => {\n//     // Add your action here to fetch initial data if needed\n//     // Example: dispatch(getAllTodos());\n//   }, [dispatch]);\n\n//   return (\n//     <Provider store={store}>\n//       <div>\n//         {!isAuthenticated ? (\n//           // If not authenticated, render the register and login pages\n//           <>\n//             <RegisterForm />\n//             <LoginForm />\n//           </>\n//         ) : (\n//           // If authenticated, render the TodoList page\n//           <>\n//             <Header />\n//             <TodoForm />\n//             <Todos />\n//           </>\n//         )}\n//       </div>\n//     </Provider>\n//   );\n// };\n\n// export default App;\n////////////\n// src/App.js\nimport React from 'react';\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\nimport LoginForm from './components/LoginForm';\nimport Todos from './components/Todos';\nimport { createRoot } from 'react-dom/client';\n\nconst App = () => {\n  return (\n    <Router>\n      <Routes>\n        <Route path=\"/login\" element={<LoginForm />} />\n        <Route path=\"/todos\" element={<Todos />} />\n        {/* Add other routes if needed */}\n      </Routes>\n    </Router>\n  );\n};\n\nexport default App;\n\n\n\n"],"mappings":";AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,aAAa,IAAIC,MAAM,EAAEC,KAAK,EAAEC,MAAM,QAAQ,kBAAkB;AACzE,OAAOC,SAAS,MAAM,wBAAwB;AAC9C,OAAOC,KAAK,MAAM,oBAAoB;AACtC,SAASC,UAAU,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAChB,oBACED,OAAA,CAACP,MAAM;IAAAS,QAAA,eACLF,OAAA,CAACL,MAAM;MAAAO,QAAA,gBACLF,OAAA,CAACN,KAAK;QAACS,IAAI,EAAC,QAAQ;QAACC,OAAO,eAAEJ,OAAA,CAACJ,SAAS;UAAAS,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC/CR,OAAA,CAACN,KAAK;QAACS,IAAI,EAAC,QAAQ;QAACC,OAAO,eAAEJ,OAAA,CAACH,KAAK;UAAAQ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAErC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEb,CAAC;AAACC,EAAA,GAVIR,GAAG;AAYT,eAAeA,GAAG;AAAC,IAAAQ,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}