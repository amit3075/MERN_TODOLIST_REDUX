{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\acer\\\\Desktop\\\\MERN_Todolist\\\\forntend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// // import './App.css';\n\n// // // components\n// // import Header from './components/Header';\n// // import TodoForm from './components/TodoForm';\n// // import Todos from './components/Todos';\n// // import React from 'react';\n// // import { Provider } from 'react-redux';\n// // import store from './store';\n// // import RegisterForm from './components/RegisterForm';\n\n// // function App() {\n// //   return (\n// //     <Provider store={store}>\n// //    <div>\n\n// //       <RegisterForm />\n// //       <Header />\n// //       <TodoForm />\n// //       <Todos />\n// //     </div>\n// //    </Provider>\n// //   );\n// // }\n// // import React, { useState } from 'react';\n// // import { useSelector } from 'react-redux';\n// // import { Provider } from 'react-redux';\n// // import Header from './components/Header';\n// // import TodoForm from './components/TodoForm';\n// // import Todos from './components/Todos';\n// // import RegisterForm from './components/RegisterForm';\n// // import LoginForm from './components/LoginForm';\n// // import store from './redux/store'; // Make sure to import your store here\n\n// // const App = () => {\n// //   // State to track user authentication status\n// //   const [isAuthenticated, setIsAuthenticated] = useState(false);\n\n// //   // Use Redux state to determine if the user is authenticated\n// //   const { token } = useSelector((state) => state.auth);\n\n// //   // Check if the user has a valid token (authenticated)\n// //   // Update the isAuthenticated state accordingly\n// //   if (token && !isAuthenticated) {\n// //     setIsAuthenticated(true);\n// //   }\n\n// //   return (\n// //     <Provider store={store}>\n// //       <div>\n// //         {!isAuthenticated ? (\n// //           // If not authenticated, render the register and login pages\n// //           <>\n// //             <RegisterForm />\n// //             <LoginForm />\n// //           </>\n// //         ) : (\n// //           // If authenticated, render the TodoList page\n// //           <>\n// //             <Header />\n// //             <TodoForm />\n// //             <Todos />\n// //           </>\n// //         )}\n// //       </div>\n// //     </Provider>\n// //   );\n// // };\n\n// // export default App;\n// import React, { useState } from 'react';\n// import { useSelector } from 'react-redux';\n// import Header from './components/Header';\n// import TodoForm from './components/TodoForm';\n// import Todos from './components/Todos';\n// import RegisterForm from './components/RegisterForm';\n// import LoginForm from './components/LoginForm';\n\n// const App = () => {\n//   // State to track user authentication status\n//   const [isAuthenticated, setIsAuthenticated] = useState(false);\n\n//   // Use Redux state to determine if the user is authenticated\n//   const { token } = useSelector((state) => state.auth);\n\n//   // Check if the user has a valid token (authenticated)\n//   // Update the isAuthenticated state accordingly\n//   if (token && !isAuthenticated) {\n//     setIsAuthenticated(true);\n//   }\n\n//   return (\n//     <div>\n//       {!isAuthenticated ? (\n//         // If not authenticated, render the register and login pages\n//         <>\n//           <RegisterForm />\n//           <LoginForm /> {/* Use LoginForm component here */}\n//         </>\n//       ) : (\n//         // If authenticated, render the TodoList page\n//         <>\n//           <Header />\n//           <TodoForm />\n//           <Todos />\n//         </>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default App;\n\n// App.js\n// import React, { useEffect } from 'react';\n// import { useDispatch, useSelector } from 'react-redux';\n// import { Provider } from 'react-redux';\n// import Header from './components/Header';\n// import TodoForm from './components/TodoForm';\n// import Todos from './components/Todos';\n// import RegisterForm from './components/RegisterForm';\n// import LoginForm from './components/LoginForm';\n// import store from './redux/store'; // Import your Redux store\n\n// const App = () => {\n//   const dispatch = useDispatch();\n//   const isAuthenticated = useSelector((state) => !!state.auth.token);\n\n//   // Fetch all Todos when the component mounts (you can adjust this as needed)\n//   useEffect(() => {\n//     // Add your action here to fetch initial data if needed\n//     // Example: dispatch(getAllTodos());\n//   }, [dispatch]);\n\n//   return (\n//     <Provider store={store}>\n//       <div>\n//         {!isAuthenticated ? (\n//           // If not authenticated, render the register and login pages\n//           <>\n//             <RegisterForm />\n//             <LoginForm />\n//           </>\n//         ) : (\n//           // If authenticated, render the TodoList page\n//           <>\n//             <Header />\n//             <TodoForm />\n//             <Todos />\n//           </>\n//         )}\n//       </div>\n//     </Provider>\n//   );\n// };\n\n// export default App;\nimport React from 'react';\nimport Header from './components/Header';\nimport LoginForm from './components/LoginForm';\nimport TodoList from './components/TodoList';\nimport { useSelector } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const token = useSelector(state => state.auth.token); // Assuming authReducer stores token\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 7\n    }, this), token ? /*#__PURE__*/_jsxDEV(TodoList, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 16\n    }, this) : /*#__PURE__*/_jsxDEV(LoginForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 31\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 168,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"bD5+gKbiITcJRDYAIJK4ZSEgato=\", false, function () {\n  return [useSelector];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","Header","LoginForm","TodoList","useSelector","jsxDEV","_jsxDEV","App","_s","token","state","auth","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/acer/Desktop/MERN_Todolist/forntend/src/App.js"],"sourcesContent":["// // import './App.css';\n\n// // // components\n// // import Header from './components/Header';\n// // import TodoForm from './components/TodoForm';\n// // import Todos from './components/Todos';\n// // import React from 'react';\n// // import { Provider } from 'react-redux';\n// // import store from './store';\n// // import RegisterForm from './components/RegisterForm';\n\n// // function App() {\n// //   return (\n// //     <Provider store={store}>\n// //    <div>\n      \n// //       <RegisterForm />\n// //       <Header />\n// //       <TodoForm />\n// //       <Todos />\n// //     </div>\n// //    </Provider>\n// //   );\n// // }\n// // import React, { useState } from 'react';\n// // import { useSelector } from 'react-redux';\n// // import { Provider } from 'react-redux';\n// // import Header from './components/Header';\n// // import TodoForm from './components/TodoForm';\n// // import Todos from './components/Todos';\n// // import RegisterForm from './components/RegisterForm';\n// // import LoginForm from './components/LoginForm';\n// // import store from './redux/store'; // Make sure to import your store here\n\n// // const App = () => {\n// //   // State to track user authentication status\n// //   const [isAuthenticated, setIsAuthenticated] = useState(false);\n\n// //   // Use Redux state to determine if the user is authenticated\n// //   const { token } = useSelector((state) => state.auth);\n\n// //   // Check if the user has a valid token (authenticated)\n// //   // Update the isAuthenticated state accordingly\n// //   if (token && !isAuthenticated) {\n// //     setIsAuthenticated(true);\n// //   }\n\n// //   return (\n// //     <Provider store={store}>\n// //       <div>\n// //         {!isAuthenticated ? (\n// //           // If not authenticated, render the register and login pages\n// //           <>\n// //             <RegisterForm />\n// //             <LoginForm />\n// //           </>\n// //         ) : (\n// //           // If authenticated, render the TodoList page\n// //           <>\n// //             <Header />\n// //             <TodoForm />\n// //             <Todos />\n// //           </>\n// //         )}\n// //       </div>\n// //     </Provider>\n// //   );\n// // };\n\n// // export default App;\n// import React, { useState } from 'react';\n// import { useSelector } from 'react-redux';\n// import Header from './components/Header';\n// import TodoForm from './components/TodoForm';\n// import Todos from './components/Todos';\n// import RegisterForm from './components/RegisterForm';\n// import LoginForm from './components/LoginForm';\n\n// const App = () => {\n//   // State to track user authentication status\n//   const [isAuthenticated, setIsAuthenticated] = useState(false);\n\n//   // Use Redux state to determine if the user is authenticated\n//   const { token } = useSelector((state) => state.auth);\n\n//   // Check if the user has a valid token (authenticated)\n//   // Update the isAuthenticated state accordingly\n//   if (token && !isAuthenticated) {\n//     setIsAuthenticated(true);\n//   }\n\n//   return (\n//     <div>\n//       {!isAuthenticated ? (\n//         // If not authenticated, render the register and login pages\n//         <>\n//           <RegisterForm />\n//           <LoginForm /> {/* Use LoginForm component here */}\n//         </>\n//       ) : (\n//         // If authenticated, render the TodoList page\n//         <>\n//           <Header />\n//           <TodoForm />\n//           <Todos />\n//         </>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default App;\n\n// App.js\n// import React, { useEffect } from 'react';\n// import { useDispatch, useSelector } from 'react-redux';\n// import { Provider } from 'react-redux';\n// import Header from './components/Header';\n// import TodoForm from './components/TodoForm';\n// import Todos from './components/Todos';\n// import RegisterForm from './components/RegisterForm';\n// import LoginForm from './components/LoginForm';\n// import store from './redux/store'; // Import your Redux store\n\n// const App = () => {\n//   const dispatch = useDispatch();\n//   const isAuthenticated = useSelector((state) => !!state.auth.token);\n\n//   // Fetch all Todos when the component mounts (you can adjust this as needed)\n//   useEffect(() => {\n//     // Add your action here to fetch initial data if needed\n//     // Example: dispatch(getAllTodos());\n//   }, [dispatch]);\n\n//   return (\n//     <Provider store={store}>\n//       <div>\n//         {!isAuthenticated ? (\n//           // If not authenticated, render the register and login pages\n//           <>\n//             <RegisterForm />\n//             <LoginForm />\n//           </>\n//         ) : (\n//           // If authenticated, render the TodoList page\n//           <>\n//             <Header />\n//             <TodoForm />\n//             <Todos />\n//           </>\n//         )}\n//       </div>\n//     </Provider>\n//   );\n// };\n\n// export default App;\nimport React from 'react';\nimport Header from './components/Header';\nimport LoginForm from './components/LoginForm';\nimport TodoList from './components/TodoList';\nimport { useSelector } from 'react-redux';\n\nconst App = () => {\n  const token = useSelector((state) => state.auth.token); // Assuming authReducer stores token\n\n  return (\n    <div>\n      <Header />\n      {token ? <TodoList /> : <LoginForm />}\n    </div>\n  );\n};\n\nexport default App;\n\n"],"mappings":";;AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,SAAS,MAAM,wBAAwB;AAC9C,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,SAASC,WAAW,QAAQ,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAMC,KAAK,GAAGL,WAAW,CAAEM,KAAK,IAAKA,KAAK,CAACC,IAAI,CAACF,KAAK,CAAC,CAAC,CAAC;;EAExD,oBACEH,OAAA;IAAAM,QAAA,gBACEN,OAAA,CAACL,MAAM;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EACTP,KAAK,gBAAGH,OAAA,CAACH,QAAQ;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,gBAAGV,OAAA,CAACJ,SAAS;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClC,CAAC;AAEV,CAAC;AAACR,EAAA,CATID,GAAG;EAAA,QACOH,WAAW;AAAA;AAAAa,EAAA,GADrBV,GAAG;AAWT,eAAeA,GAAG;AAAC,IAAAU,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}