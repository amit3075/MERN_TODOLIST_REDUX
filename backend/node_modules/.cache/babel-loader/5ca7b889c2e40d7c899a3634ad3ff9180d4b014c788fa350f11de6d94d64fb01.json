{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\acer\\\\Desktop\\\\MERN_Todolist\\\\forntend\\\\src\\\\components\\\\Todo.jsx\",\n  _s = $RefreshSig$();\n// import { useState } from \"react\";\n\n// import { toggleTodo, updateTodo } from \"../redux/actions/index\";\n// import { deleteTodo } from \"../redux/actions/index\";\n\n// import { useDispatch } from \"react-redux\";\n\n// const Todo = ({ todo }) => {\n\n//     const [editing, setEditing] = useState(false);\n//     const [text, setText] = useState(todo?.data);\n\n//     const dispatch = useDispatch();\n\n//     const onFormSubmit = (e) => {\n//         e.preventDefault();\n\n//         setEditing(prevState => !prevState);\n\n//         dispatch(updateTodo(todo._id, text))\n//     }\n\n//     return (\n//         <li\n//             className=\"task\"\n//             onClick={() => dispatch(toggleTodo(todo._id))}\n//             style={{\n//                 textDecoration: todo?.done ? 'line-through' : '',\n//                 color: todo?.done ? '#bdc3c7' : '#34495e'\n//             }}\n//             data-testid=\"todo-test\"\n//         >\n//             <span style={{ display: editing ? 'none' : '' }}>{todo?.data}</span>\n\n//             <form\n//                 style={{ display: editing ? 'inline' : 'none' }}\n//                 onSubmit={onFormSubmit}\n//             >\n//                 <input\n//                     type=\"text\"\n//                     value={text}\n//                     className=\"edit-todo\"\n//                     onChange={(e) => setText(e.target.value)}\n//                 />\n//             </form>\n\n//             <span className=\"icon\" onClick={() => dispatch(deleteTodo(todo._id))}>\n//                 <i className=\"fas fa-trash\" />\n//             </span>\n//             <span className=\"icon\" onClick={() => setEditing(prevState => !prevState)}>\n//                 <i className=\"fas fa-pen\" />\n//             </span>\n//         </li>\n//     )\n// }\n\n// export default Todo;\n// import React, { useState } from 'react';\n// import { useDispatch } from 'react-redux';\n// import { toggleTodo, updateTodo } from '../redux/actions/index';\n// import { deleteTodo } from '../redux/actions/index';\n\n// const Todo = ({ todo }) => {\n//   // Check if todo is undefined and return null\n//   if (!todo) {\n//     return null;\n//   }\n\n//   // Move the conditional checks outside of the React Hook calls\n//   const [editing, setEditing] = useState(false);\n//   const [text, setText] = useState(todo.data);\n\n//   const dispatch = useDispatch();\n\n//   const onFormSubmit = (e) => {\n//     e.preventDefault();\n\n//     setEditing((prevState) => !prevState);\n\n//     dispatch(updateTodo(todo._id, text));\n//   };\n\n//   // Rest of the component code remains unchanged\n//   return (\n//     <li\n//       className=\"task\"\n//       onClick={() => dispatch(toggleTodo(todo._id))}\n//       style={{\n//         textDecoration: todo.done ? 'line-through' : '',\n//         color: todo.done ? '#bdc3c7' : '#34495e',\n//       }}\n//       data-testid=\"todo-test\"\n//     >\n//       <span style={{ display: editing ? 'none' : '' }}>{todo.data}</span>\n\n//       <form style={{ display: editing ? 'inline' : 'none' }} onSubmit={onFormSubmit}>\n//         <input\n//           type=\"text\"\n//           value={text}\n//           className=\"edit-todo\"\n//           onChange={(e) => setText(e.target.value)}\n//         />\n//       </form>\n\n//       <span className=\"icon\" onClick={() => dispatch(deleteTodo(todo._id))}>\n//         <i className=\"fas fa-trash\" />\n//       </span>\n//       <span className=\"icon\" onClick={() => setEditing((prevState) => !prevState)}>\n//         <i className=\"fas fa-pen\" />\n//       </span>\n//     </li>\n//   );\n// };\n\n// export default Todo;\n// import React, { useState } from 'react';\n// import { useDispatch } from 'react-redux';\n// import { toggleTodo, updateTodo } from '../redux/actions/index';\n// import { deleteTodo } from '../redux/actions/index';\n\n// const Todo = ({ todo }) => {\n//   const dispatch = useDispatch();\n//   const [editing, setEditing] = useState(false);\n//   const [text, setText] = useState(todo.data);\n\n//   const onFormSubmit = (e) => {\n//     e.preventDefault();\n//     setEditing(false);\n//     dispatch(updateTodo(todo._id, text));\n//   };\n\n//   return (\n//     <li\n//       className=\"task\"\n//       onClick={() => dispatch(toggleTodo(todo._id))}\n//       style={{\n//         textDecoration: todo.done ? 'line-through' : '',\n//         color: todo.done ? '#bdc3c7' : '#34495e',\n//       }}\n//       data-testid=\"todo-test\"\n//     >\n//       <span style={{ display: editing ? 'none' : '' }}>{todo.data}</span>\n\n//       <form style={{ display: editing ? 'inline' : 'none' }} onSubmit={onFormSubmit}>\n//         <input\n//           type=\"text\"\n//           value={text}\n//           className=\"edit-todo\"\n//           onChange={(e) => setText(e.target.value)}\n//         />\n//       </form>\n\n//       <span className=\"icon\" onClick={() => dispatch(deleteTodo(todo._id))}>\n//         <i className=\"fas fa-trash\" />\n//       </span>\n//       <span className=\"icon\" onClick={() => setEditing(true)}>\n//         <i className=\"fas fa-pen\" />\n//       </span>\n//     </li>\n//   );\n// };\n\n// export default Todo;\n\nimport React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { toggleTodo, updateTodo } from '../redux/actions/index';\nimport { deleteTodo } from '../redux/actions/index';\nimport '../App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Todo = ({\n  todo\n}) => {\n  _s();\n  // Move the conditional check outside of the React Hook call\n  const isTodoDefined = !!todo;\n  const [editing, setEditing] = useState(false);\n  const [text, setText] = useState(isTodoDefined ? todo.data : '');\n  const dispatch = useDispatch();\n  const onFormSubmit = e => {\n    e.preventDefault();\n    setEditing(prevState => !prevState);\n    dispatch(updateTodo(todo._id, text));\n  };\n\n  // Rest of the component code remains unchanged\n  return isTodoDefined ? /*#__PURE__*/_jsxDEV(\"li\", {\n    className: \"task\",\n    onClick: () => dispatch(toggleTodo(todo._id)),\n    style: {\n      textDecoration: todo.done ? 'line-through' : '',\n      color: todo.done ? '#bdc3c7' : '#34495e'\n    },\n    \"data-testid\": \"todo-test\",\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      style: {\n        display: editing ? 'none' : ''\n      },\n      children: todo.data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      style: {\n        display: editing ? 'inline' : 'none'\n      },\n      onSubmit: onFormSubmit,\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: text,\n        className: \"edit-todo\",\n        onChange: e => setText(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"icon\",\n      onClick: () => dispatch(deleteTodo(todo._id)),\n      children: /*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"fas fa-trash\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"icon\",\n      onClick: () => setEditing(prevState => !prevState),\n      children: /*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"fas fa-pen\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 189,\n    columnNumber: 5\n  }, this) : null;\n};\n_s(Todo, \"qBD8Uh28tPPzoIRgQc9heNi/tXY=\", false, function () {\n  return [useDispatch];\n});\n_c = Todo;\nexport default Todo;\nvar _c;\n$RefreshReg$(_c, \"Todo\");","map":{"version":3,"names":["React","useState","useDispatch","toggleTodo","updateTodo","deleteTodo","jsxDEV","_jsxDEV","Todo","todo","_s","isTodoDefined","editing","setEditing","text","setText","data","dispatch","onFormSubmit","e","preventDefault","prevState","_id","className","onClick","style","textDecoration","done","color","children","display","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","_c","$RefreshReg$"],"sources":["C:/Users/acer/Desktop/MERN_Todolist/forntend/src/components/Todo.jsx"],"sourcesContent":["// import { useState } from \"react\";\r\n\r\n// import { toggleTodo, updateTodo } from \"../redux/actions/index\";\r\n// import { deleteTodo } from \"../redux/actions/index\";\r\n\r\n// import { useDispatch } from \"react-redux\";\r\n\r\n// const Todo = ({ todo }) => {\r\n\r\n//     const [editing, setEditing] = useState(false);\r\n//     const [text, setText] = useState(todo?.data);\r\n\r\n//     const dispatch = useDispatch();\r\n\r\n//     const onFormSubmit = (e) => {\r\n//         e.preventDefault();\r\n\r\n//         setEditing(prevState => !prevState);\r\n\r\n//         dispatch(updateTodo(todo._id, text))\r\n//     }\r\n\r\n//     return (\r\n//         <li\r\n//             className=\"task\"\r\n//             onClick={() => dispatch(toggleTodo(todo._id))}\r\n//             style={{\r\n//                 textDecoration: todo?.done ? 'line-through' : '',\r\n//                 color: todo?.done ? '#bdc3c7' : '#34495e'\r\n//             }}\r\n//             data-testid=\"todo-test\"\r\n//         >\r\n//             <span style={{ display: editing ? 'none' : '' }}>{todo?.data}</span>\r\n\r\n//             <form\r\n//                 style={{ display: editing ? 'inline' : 'none' }}\r\n//                 onSubmit={onFormSubmit}\r\n//             >\r\n//                 <input\r\n//                     type=\"text\"\r\n//                     value={text}\r\n//                     className=\"edit-todo\"\r\n//                     onChange={(e) => setText(e.target.value)}\r\n//                 />\r\n//             </form>\r\n\r\n//             <span className=\"icon\" onClick={() => dispatch(deleteTodo(todo._id))}>\r\n//                 <i className=\"fas fa-trash\" />\r\n//             </span>\r\n//             <span className=\"icon\" onClick={() => setEditing(prevState => !prevState)}>\r\n//                 <i className=\"fas fa-pen\" />\r\n//             </span>\r\n//         </li>\r\n//     )\r\n// }\r\n\r\n// export default Todo;\r\n// import React, { useState } from 'react';\r\n// import { useDispatch } from 'react-redux';\r\n// import { toggleTodo, updateTodo } from '../redux/actions/index';\r\n// import { deleteTodo } from '../redux/actions/index';\r\n\r\n// const Todo = ({ todo }) => {\r\n//   // Check if todo is undefined and return null\r\n//   if (!todo) {\r\n//     return null;\r\n//   }\r\n\r\n//   // Move the conditional checks outside of the React Hook calls\r\n//   const [editing, setEditing] = useState(false);\r\n//   const [text, setText] = useState(todo.data);\r\n\r\n//   const dispatch = useDispatch();\r\n\r\n//   const onFormSubmit = (e) => {\r\n//     e.preventDefault();\r\n\r\n//     setEditing((prevState) => !prevState);\r\n\r\n//     dispatch(updateTodo(todo._id, text));\r\n//   };\r\n\r\n//   // Rest of the component code remains unchanged\r\n//   return (\r\n//     <li\r\n//       className=\"task\"\r\n//       onClick={() => dispatch(toggleTodo(todo._id))}\r\n//       style={{\r\n//         textDecoration: todo.done ? 'line-through' : '',\r\n//         color: todo.done ? '#bdc3c7' : '#34495e',\r\n//       }}\r\n//       data-testid=\"todo-test\"\r\n//     >\r\n//       <span style={{ display: editing ? 'none' : '' }}>{todo.data}</span>\r\n\r\n//       <form style={{ display: editing ? 'inline' : 'none' }} onSubmit={onFormSubmit}>\r\n//         <input\r\n//           type=\"text\"\r\n//           value={text}\r\n//           className=\"edit-todo\"\r\n//           onChange={(e) => setText(e.target.value)}\r\n//         />\r\n//       </form>\r\n\r\n//       <span className=\"icon\" onClick={() => dispatch(deleteTodo(todo._id))}>\r\n//         <i className=\"fas fa-trash\" />\r\n//       </span>\r\n//       <span className=\"icon\" onClick={() => setEditing((prevState) => !prevState)}>\r\n//         <i className=\"fas fa-pen\" />\r\n//       </span>\r\n//     </li>\r\n//   );\r\n// };\r\n\r\n// export default Todo;\r\n// import React, { useState } from 'react';\r\n// import { useDispatch } from 'react-redux';\r\n// import { toggleTodo, updateTodo } from '../redux/actions/index';\r\n// import { deleteTodo } from '../redux/actions/index';\r\n\r\n// const Todo = ({ todo }) => {\r\n//   const dispatch = useDispatch();\r\n//   const [editing, setEditing] = useState(false);\r\n//   const [text, setText] = useState(todo.data);\r\n\r\n//   const onFormSubmit = (e) => {\r\n//     e.preventDefault();\r\n//     setEditing(false);\r\n//     dispatch(updateTodo(todo._id, text));\r\n//   };\r\n\r\n//   return (\r\n//     <li\r\n//       className=\"task\"\r\n//       onClick={() => dispatch(toggleTodo(todo._id))}\r\n//       style={{\r\n//         textDecoration: todo.done ? 'line-through' : '',\r\n//         color: todo.done ? '#bdc3c7' : '#34495e',\r\n//       }}\r\n//       data-testid=\"todo-test\"\r\n//     >\r\n//       <span style={{ display: editing ? 'none' : '' }}>{todo.data}</span>\r\n\r\n//       <form style={{ display: editing ? 'inline' : 'none' }} onSubmit={onFormSubmit}>\r\n//         <input\r\n//           type=\"text\"\r\n//           value={text}\r\n//           className=\"edit-todo\"\r\n//           onChange={(e) => setText(e.target.value)}\r\n//         />\r\n//       </form>\r\n\r\n//       <span className=\"icon\" onClick={() => dispatch(deleteTodo(todo._id))}>\r\n//         <i className=\"fas fa-trash\" />\r\n//       </span>\r\n//       <span className=\"icon\" onClick={() => setEditing(true)}>\r\n//         <i className=\"fas fa-pen\" />\r\n//       </span>\r\n//     </li>\r\n//   );\r\n// };\r\n\r\n// export default Todo;\r\n\r\nimport React, { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { toggleTodo, updateTodo } from '../redux/actions/index';\r\nimport { deleteTodo } from '../redux/actions/index';\r\nimport '../App.css';\r\n\r\nconst Todo = ({ todo }) => {\r\n  // Move the conditional check outside of the React Hook call\r\n  const isTodoDefined = !!todo;\r\n  const [editing, setEditing] = useState(false);\r\n  const [text, setText] = useState(isTodoDefined ? todo.data : '');\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const onFormSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    setEditing((prevState) => !prevState);\r\n\r\n    dispatch(updateTodo(todo._id, text));\r\n  };\r\n\r\n  // Rest of the component code remains unchanged\r\n  return isTodoDefined ? (\r\n    <li\r\n      className=\"task\"\r\n      onClick={() => dispatch(toggleTodo(todo._id))}\r\n      style={{\r\n        textDecoration: todo.done ? 'line-through' : '',\r\n        color: todo.done ? '#bdc3c7' : '#34495e',\r\n      }}\r\n      data-testid=\"todo-test\"\r\n    >\r\n      <span style={{ display: editing ? 'none' : '' }}>{todo.data}</span>\r\n\r\n      <form style={{ display: editing ? 'inline' : 'none' }} onSubmit={onFormSubmit}>\r\n        <input\r\n          type=\"text\"\r\n          value={text}\r\n          className=\"edit-todo\"\r\n          onChange={(e) => setText(e.target.value)}\r\n        />\r\n      </form>\r\n\r\n      <span className=\"icon\" onClick={() => dispatch(deleteTodo(todo._id))}>\r\n        <i className=\"fas fa-trash\" />\r\n      </span>\r\n      <span className=\"icon\" onClick={() => setEditing((prevState) => !prevState)}>\r\n        <i className=\"fas fa-pen\" />\r\n      </span>\r\n    </li>\r\n  ) : null;\r\n};\r\n\r\nexport default Todo;\r\n"],"mappings":";;AAAA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,aAAa;AACzC,SAASC,UAAU,EAAEC,UAAU,QAAQ,wBAAwB;AAC/D,SAASC,UAAU,QAAQ,wBAAwB;AACnD,OAAO,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpB,MAAMC,IAAI,GAAGA,CAAC;EAAEC;AAAK,CAAC,KAAK;EAAAC,EAAA;EACzB;EACA,MAAMC,aAAa,GAAG,CAAC,CAACF,IAAI;EAC5B,MAAM,CAACG,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACa,IAAI,EAAEC,OAAO,CAAC,GAAGd,QAAQ,CAACU,aAAa,GAAGF,IAAI,CAACO,IAAI,GAAG,EAAE,CAAC;EAEhE,MAAMC,QAAQ,GAAGf,WAAW,CAAC,CAAC;EAE9B,MAAMgB,YAAY,GAAIC,CAAC,IAAK;IAC1BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAElBP,UAAU,CAAEQ,SAAS,IAAK,CAACA,SAAS,CAAC;IAErCJ,QAAQ,CAACb,UAAU,CAACK,IAAI,CAACa,GAAG,EAAER,IAAI,CAAC,CAAC;EACtC,CAAC;;EAED;EACA,OAAOH,aAAa,gBAClBJ,OAAA;IACEgB,SAAS,EAAC,MAAM;IAChBC,OAAO,EAAEA,CAAA,KAAMP,QAAQ,CAACd,UAAU,CAACM,IAAI,CAACa,GAAG,CAAC,CAAE;IAC9CG,KAAK,EAAE;MACLC,cAAc,EAAEjB,IAAI,CAACkB,IAAI,GAAG,cAAc,GAAG,EAAE;MAC/CC,KAAK,EAAEnB,IAAI,CAACkB,IAAI,GAAG,SAAS,GAAG;IACjC,CAAE;IACF,eAAY,WAAW;IAAAE,QAAA,gBAEvBtB,OAAA;MAAMkB,KAAK,EAAE;QAAEK,OAAO,EAAElB,OAAO,GAAG,MAAM,GAAG;MAAG,CAAE;MAAAiB,QAAA,EAAEpB,IAAI,CAACO;IAAI;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eAEnE3B,OAAA;MAAMkB,KAAK,EAAE;QAAEK,OAAO,EAAElB,OAAO,GAAG,QAAQ,GAAG;MAAO,CAAE;MAACuB,QAAQ,EAAEjB,YAAa;MAAAW,QAAA,eAC5EtB,OAAA;QACE6B,IAAI,EAAC,MAAM;QACXC,KAAK,EAAEvB,IAAK;QACZS,SAAS,EAAC,WAAW;QACrBe,QAAQ,EAAGnB,CAAC,IAAKJ,OAAO,CAACI,CAAC,CAACoB,MAAM,CAACF,KAAK;MAAE;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1C;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC,eAEP3B,OAAA;MAAMgB,SAAS,EAAC,MAAM;MAACC,OAAO,EAAEA,CAAA,KAAMP,QAAQ,CAACZ,UAAU,CAACI,IAAI,CAACa,GAAG,CAAC,CAAE;MAAAO,QAAA,eACnEtB,OAAA;QAAGgB,SAAS,EAAC;MAAc;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1B,CAAC,eACP3B,OAAA;MAAMgB,SAAS,EAAC,MAAM;MAACC,OAAO,EAAEA,CAAA,KAAMX,UAAU,CAAEQ,SAAS,IAAK,CAACA,SAAS,CAAE;MAAAQ,QAAA,eAC1EtB,OAAA;QAAGgB,SAAS,EAAC;MAAY;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC,GACH,IAAI;AACV,CAAC;AAACxB,EAAA,CA9CIF,IAAI;EAAA,QAMSN,WAAW;AAAA;AAAAsC,EAAA,GANxBhC,IAAI;AAgDV,eAAeA,IAAI;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}